{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$4","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$5","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$6","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$7","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$9","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/wangziguan/wzg/EnergyMaster/packages/aldeed:autoform/templates/bootstrap3/components/quickForm/quickForm.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/aldeed:autoform/templates/bootstrap3/components/quickForm/quickForm.js","filename":"/home/wangziguan/wzg/EnergyMaster/packages/aldeed:autoform/templates/bootstrap3/components/quickForm/quickForm.js","passPerPreset":false,"envName":"development","cwd":"/home/wangziguan/wzg/EnergyMaster","root":"/home/wangziguan/wzg/EnergyMaster","generatorOpts":{"filename":"/home/wangziguan/wzg/EnergyMaster/packages/aldeed:autoform/templates/bootstrap3/components/quickForm/quickForm.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/aldeed:autoform/templates/bootstrap3/components/quickForm/quickForm.js"}},"code":"Template.quickForm_bootstrap3.helpers({\n  fieldGroupLabel: function () {\n    var name = this.name; // if field group name is of the form XY_abcde where \"XY\" is a number, remove prefix\n\n    if (!isNaN(parseInt(name.substr(0, 2), 10)) && name.charAt(2) === \"_\") {\n      name = name.substr(3);\n    } // if SimpleSchema.defaultLabel is defined, use it\n\n\n    if (AutoForm.SimpleSchema && typeof AutoForm.SimpleSchema.defaultLabel === \"function\") {\n      return AutoForm.SimpleSchema.defaultLabel(name);\n    } else {\n      // else, just capitalise name\n      return name.charAt(0).toUpperCase() + name.slice(1);\n    }\n  },\n  quickFieldsAtts: function () {\n    // These are the quickForm attributes that we want to forward to\n    // the afQuickFields component.\n    return _.pick(this.atts, 'fields', 'id-prefix', 'input-col-class', 'label-class');\n  },\n  submitButtonAtts: function bsQuickFormSubmitButtonAtts() {\n    var qfAtts = this.atts;\n    var atts = {};\n\n    if (typeof qfAtts.buttonClasses === 'string') {\n      atts['class'] = qfAtts.buttonClasses;\n    } else {\n      atts['class'] = 'btn btn-primary';\n    }\n\n    return atts;\n  }\n});","map":{"version":3,"sources":["packages/aldeed:autoform/templates/bootstrap3/components/quickForm/quickForm.js"],"names":["Template","quickForm_bootstrap3","helpers","fieldGroupLabel","name","isNaN","parseInt","substr","charAt","AutoForm","SimpleSchema","defaultLabel","toUpperCase","slice","quickFieldsAtts","_","pick","atts","submitButtonAtts","bsQuickFormSubmitButtonAtts","qfAtts","buttonClasses"],"mappings":"AAAAA,QAAQ,CAACC,oBAAT,CAA8BC,OAA9B,CAAsC;AACpCC,EAAAA,eAAe,EAAE,YAAY;AAC3B,QAAIC,IAAI,GAAG,KAAKA,IAAhB,CAD2B,CAG3B;;AACA,QAAI,CAACC,KAAK,CAACC,QAAQ,CAACF,IAAI,CAACG,MAAL,CAAY,CAAZ,EAAc,CAAd,CAAD,EAAmB,EAAnB,CAAT,CAAN,IAA0CH,IAAI,CAACI,MAAL,CAAY,CAAZ,MAAmB,GAAjE,EAAsE;AACpEJ,MAAAA,IAAI,GAAGA,IAAI,CAACG,MAAL,CAAY,CAAZ,CAAP;AACD,KAN0B,CAQ3B;;;AACA,QAAIE,QAAQ,CAACC,YAAT,IAAyB,OAAOD,QAAQ,CAACC,YAAT,CAAsBC,YAA7B,KAA8C,UAA3E,EAAuF;AACrF,aAAOF,QAAQ,CAACC,YAAT,CAAsBC,YAAtB,CAAmCP,IAAnC,CAAP;AACD,KAFD,MAEO;AACL;AACA,aAAOA,IAAI,CAACI,MAAL,CAAY,CAAZ,EAAeI,WAAf,KAA+BR,IAAI,CAACS,KAAL,CAAW,CAAX,CAAtC;AACD;AACF,GAhBmC;AAiBpCC,EAAAA,eAAe,EAAE,YAAY;AAC3B;AACA;AACA,WAAOC,CAAC,CAACC,IAAF,CAAO,KAAKC,IAAZ,EAAkB,QAAlB,EAA4B,WAA5B,EAAyC,iBAAzC,EAA4D,aAA5D,CAAP;AACD,GArBmC;AAsBpCC,EAAAA,gBAAgB,EAAE,SAASC,2BAAT,GAAuC;AACvD,QAAIC,MAAM,GAAG,KAAKH,IAAlB;AACA,QAAIA,IAAI,GAAG,EAAX;;AACA,QAAI,OAAOG,MAAM,CAACC,aAAd,KAAgC,QAApC,EAA8C;AAC5CJ,MAAAA,IAAI,CAAC,OAAD,CAAJ,GAAgBG,MAAM,CAACC,aAAvB;AACD,KAFD,MAEO;AACLJ,MAAAA,IAAI,CAAC,OAAD,CAAJ,GAAgB,iBAAhB;AACD;;AACD,WAAOA,IAAP;AACD;AA/BmC,CAAtC","sourcesContent":["Template.quickForm_bootstrap3.helpers({\n  fieldGroupLabel: function () {\n    var name = this.name;\n\n    // if field group name is of the form XY_abcde where \"XY\" is a number, remove prefix\n    if (!isNaN(parseInt(name.substr(0,2), 10)) && name.charAt(2) === \"_\") {\n      name = name.substr(3);\n    }\n\n    // if SimpleSchema.defaultLabel is defined, use it\n    if (AutoForm.SimpleSchema && typeof AutoForm.SimpleSchema.defaultLabel === \"function\") {\n      return AutoForm.SimpleSchema.defaultLabel(name);\n    } else {\n      // else, just capitalise name\n      return name.charAt(0).toUpperCase() + name.slice(1);\n    }\n  },\n  quickFieldsAtts: function () {\n    // These are the quickForm attributes that we want to forward to\n    // the afQuickFields component.\n    return _.pick(this.atts, 'fields', 'id-prefix', 'input-col-class', 'label-class');\n  },\n  submitButtonAtts: function bsQuickFormSubmitButtonAtts() {\n    var qfAtts = this.atts;\n    var atts = {};\n    if (typeof qfAtts.buttonClasses === 'string') {\n      atts['class'] = qfAtts.buttonClasses;\n    } else {\n      atts['class'] = 'btn btn-primary';\n    }\n    return atts;\n  }\n});\n"]},"sourceType":"script","hash":"2f6aeae2876885b0e7a8f5d840c25efbfdef48a8"}
