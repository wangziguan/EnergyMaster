{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/wangziguan/wzg/EnergyMaster/packages/aldeed:autoform/formTypes/normal.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/aldeed:autoform/formTypes/normal.js","filename":"/home/wangziguan/wzg/EnergyMaster/packages/aldeed:autoform/formTypes/normal.js","passPerPreset":false,"envName":"development","cwd":"/home/wangziguan/wzg/EnergyMaster","root":"/home/wangziguan/wzg/EnergyMaster","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/wangziguan/wzg/EnergyMaster/packages/aldeed:autoform/formTypes/normal.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/aldeed:autoform/formTypes/normal.js"}},"code":"/* global AutoForm, Hooks */\nAutoForm.addFormType('normal', {\n  onSubmit: function () {\n    var c = this; // Get onSubmit hooks\n    // These are called differently from the before hooks because\n    // they run async, but they can run in parallel and we need the\n    // result of all of them immediately because they can return\n    // false to stop normal form submission.\n\n    var hooks = Hooks.getHooks(this.formId, 'onSubmit');\n    var hookCount = hooks.length,\n        doneCount = 0,\n        submitError,\n        submitResult;\n\n    if (hookCount === 0) {\n      // we haven't called preventDefault, so normal browser\n      // submission will now happen\n      this.endSubmission();\n      return;\n    } // Set up onSubmit hook context\n\n\n    var ctx = _.extend({\n      done: function (error, result) {\n        doneCount++;\n\n        if (!submitError && error) {\n          submitError = error;\n        }\n\n        if (!submitResult && result) {\n          submitResult = result;\n        }\n\n        if (doneCount === hookCount) {\n          // run onError, onSuccess, endSubmit\n          c.result(submitError, submitResult);\n        }\n      }\n    }, this.hookContext); // Call all hooks at once.\n    // Pass both types of doc plus the doc attached to the form.\n    // If any return false, we stop normal submission, but we don't\n    // run onError, onSuccess, endSubmit hooks until they all call this.done().\n\n\n    var shouldStop = false;\n\n    _.each(hooks, function () {\n      function eachOnSubmit(hook) {\n        var result = hook.call(ctx, c.insertDoc, c.updateDoc, c.currentDoc);\n\n        if (shouldStop === false && result === false) {\n          shouldStop = true;\n        }\n      }\n\n      return eachOnSubmit;\n    }());\n\n    if (shouldStop) {\n      this.event.preventDefault();\n      this.event.stopPropagation();\n    }\n  },\n  needsModifierAndDoc: true,\n  validateForm: function () {\n    // Get SimpleSchema\n    var ss = AutoForm.getFormSchema(this.form.id); // Validate\n\n    return AutoForm._validateFormDoc(this.formDoc.insertDoc, false, this.form.id, ss, this.form);\n  }\n});","map":{"version":3,"sources":["packages/aldeed:autoform/formTypes/normal.js"],"names":["AutoForm","addFormType","onSubmit","c","hooks","Hooks","getHooks","formId","hookCount","length","doneCount","submitError","submitResult","endSubmission","ctx","_","extend","done","error","result","hookContext","shouldStop","each","eachOnSubmit","hook","call","insertDoc","updateDoc","currentDoc","event","preventDefault","stopPropagation","needsModifierAndDoc","validateForm","ss","getFormSchema","form","id","_validateFormDoc","formDoc"],"mappings":"AAAA;AAEAA,QAAQ,CAACC,WAAT,CAAqB,QAArB,EAA+B;AAC7BC,EAAAA,QAAQ,EAAE,YAAY;AACpB,QAAIC,CAAC,GAAG,IAAR,CADoB,CAGpB;AACA;AACA;AACA;AACA;;AACA,QAAIC,KAAK,GAAGC,KAAK,CAACC,QAAN,CAAe,KAAKC,MAApB,EAA4B,UAA5B,CAAZ;AAEA,QAAIC,SAAS,GAAGJ,KAAK,CAACK,MAAtB;AAAA,QAA8BC,SAAS,GAAG,CAA1C;AAAA,QAA6CC,WAA7C;AAAA,QAA0DC,YAA1D;;AAEA,QAAIJ,SAAS,KAAK,CAAlB,EAAqB;AACnB;AACA;AACA,WAAKK,aAAL;AACA;AACD,KAjBmB,CAmBpB;;;AACA,QAAIC,GAAG,GAAGC,CAAC,CAACC,MAAF,CAAS;AACjBC,MAAAA,IAAI,EAAE,UAAUC,KAAV,EAAiBC,MAAjB,EAAyB;AAC7BT,QAAAA,SAAS;;AACT,YAAI,CAACC,WAAD,IAAgBO,KAApB,EAA2B;AACzBP,UAAAA,WAAW,GAAGO,KAAd;AACD;;AACD,YAAI,CAACN,YAAD,IAAiBO,MAArB,EAA6B;AAC3BP,UAAAA,YAAY,GAAGO,MAAf;AACD;;AACD,YAAIT,SAAS,KAAKF,SAAlB,EAA6B;AAC3B;AACAL,UAAAA,CAAC,CAACgB,MAAF,CAASR,WAAT,EAAsBC,YAAtB;AACD;AACF;AAbgB,KAAT,EAcP,KAAKQ,WAdE,CAAV,CApBoB,CAoCpB;AACA;AACA;AACA;;;AACA,QAAIC,UAAU,GAAG,KAAjB;;AACAN,IAAAA,CAAC,CAACO,IAAF,CAAOlB,KAAP;AAAc,eAASmB,YAAT,CAAsBC,IAAtB,EAA4B;AACxC,YAAIL,MAAM,GAAGK,IAAI,CAACC,IAAL,CAAUX,GAAV,EAAeX,CAAC,CAACuB,SAAjB,EAA4BvB,CAAC,CAACwB,SAA9B,EAAyCxB,CAAC,CAACyB,UAA3C,CAAb;;AACA,YAAIP,UAAU,KAAK,KAAf,IAAwBF,MAAM,KAAK,KAAvC,EAA8C;AAC5CE,UAAAA,UAAU,GAAG,IAAb;AACD;AACF;;AALD,aAAuBE,YAAvB;AAAA;;AAMA,QAAIF,UAAJ,EAAgB;AACd,WAAKQ,KAAL,CAAWC,cAAX;AACA,WAAKD,KAAL,CAAWE,eAAX;AACD;AACF,GApD4B;AAqD7BC,EAAAA,mBAAmB,EAAE,IArDQ;AAsD7BC,EAAAA,YAAY,EAAE,YAAY;AACxB;AACA,QAAIC,EAAE,GAAGlC,QAAQ,CAACmC,aAAT,CAAuB,KAAKC,IAAL,CAAUC,EAAjC,CAAT,CAFwB,CAGxB;;AACA,WAAOrC,QAAQ,CAACsC,gBAAT,CAA0B,KAAKC,OAAL,CAAab,SAAvC,EAAkD,KAAlD,EAAyD,KAAKU,IAAL,CAAUC,EAAnE,EAAuEH,EAAvE,EAA2E,KAAKE,IAAhF,CAAP;AACD;AA3D4B,CAA/B","sourcesContent":["/* global AutoForm, Hooks */\n\nAutoForm.addFormType('normal', {\n  onSubmit: function () {\n    var c = this;\n\n    // Get onSubmit hooks\n    // These are called differently from the before hooks because\n    // they run async, but they can run in parallel and we need the\n    // result of all of them immediately because they can return\n    // false to stop normal form submission.\n    var hooks = Hooks.getHooks(this.formId, 'onSubmit');\n\n    var hookCount = hooks.length, doneCount = 0, submitError, submitResult;\n\n    if (hookCount === 0) {\n      // we haven't called preventDefault, so normal browser\n      // submission will now happen\n      this.endSubmission();\n      return;\n    }\n\n    // Set up onSubmit hook context\n    var ctx = _.extend({\n      done: function (error, result) {\n        doneCount++;\n        if (!submitError && error) {\n          submitError = error;\n        }\n        if (!submitResult && result) {\n          submitResult = result;\n        }\n        if (doneCount === hookCount) {\n          // run onError, onSuccess, endSubmit\n          c.result(submitError, submitResult);\n        }\n      }\n    }, this.hookContext);\n\n    // Call all hooks at once.\n    // Pass both types of doc plus the doc attached to the form.\n    // If any return false, we stop normal submission, but we don't\n    // run onError, onSuccess, endSubmit hooks until they all call this.done().\n    var shouldStop = false;\n    _.each(hooks, function eachOnSubmit(hook) {\n      var result = hook.call(ctx, c.insertDoc, c.updateDoc, c.currentDoc);\n      if (shouldStop === false && result === false) {\n        shouldStop = true;\n      }\n    });\n    if (shouldStop) {\n      this.event.preventDefault();\n      this.event.stopPropagation();\n    }\n  },\n  needsModifierAndDoc: true,\n  validateForm: function () {\n    // Get SimpleSchema\n    var ss = AutoForm.getFormSchema(this.form.id);\n    // Validate\n    return AutoForm._validateFormDoc(this.formDoc.insertDoc, false, this.form.id, ss, this.form);\n  }\n});\n"]},"sourceType":"script","hash":"69ce80de1764f7339bb7a46260cd14bfb6756366"}
