{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/wangziguan/wzg/EnergyMaster/packages/aldeed:template-extension/lib/template-inherits-helpers-from.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/aldeed:template-extension/lib/template-inherits-helpers-from.js","filename":"/home/wangziguan/wzg/EnergyMaster/packages/aldeed:template-extension/lib/template-inherits-helpers-from.js","passPerPreset":false,"envName":"development","cwd":"/home/wangziguan/wzg/EnergyMaster","root":"/home/wangziguan/wzg/EnergyMaster","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/wangziguan/wzg/EnergyMaster/packages/aldeed:template-extension/lib/template-inherits-helpers-from.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/aldeed:template-extension/lib/template-inherits-helpers-from.js"}},"code":"Template.prototype.inheritsHelpersFrom = function inheritsHelpersFrom(otherTemplate) {\n  const inheritHelpers = template => {\n    // String template names can be provided and template object is looked up\n    if (typeof template === 'string') template = Template[template];\n    if (!template) return;\n    const inheritedHelpers = {};\n\n    for (const name in template.__helpers) {\n      if (template.__helpers.hasOwnProperty(name)) {\n        if (name.charAt(0) === ' ') {\n          inheritedHelpers[name.slice(1)] = template.__helpers[name];\n        }\n      }\n    }\n\n    this.helpers(inheritedHelpers);\n  }; // Accept an array as otherTemplate argument\n\n\n  if (Array.isArray(otherTemplate)) {\n    otherTemplate.forEach(inheritHelpers);\n    return;\n  } // otherTemplate is a string\n\n\n  inheritHelpers(otherTemplate);\n};","map":{"version":3,"sources":["packages/aldeed:template-extension/lib/template-inherits-helpers-from.js"],"names":["Template","prototype","inheritsHelpersFrom","otherTemplate","inheritHelpers","template","inheritedHelpers","name","__helpers","hasOwnProperty","charAt","slice","helpers","Array","isArray","forEach"],"mappings":"AAAAA,QAAQ,CAACC,SAAT,CAAmBC,mBAAnB,GAAyC,SAASA,mBAAT,CAA6BC,aAA7B,EAA4C;AACnF,QAAMC,cAAc,GAAGC,QAAQ,IAAI;AACjC;AACA,QAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkCA,QAAQ,GAAGL,QAAQ,CAACK,QAAD,CAAnB;AAClC,QAAI,CAACA,QAAL,EAAe;AAEf,UAAMC,gBAAgB,GAAG,EAAzB;;AACA,SAAK,MAAMC,IAAX,IAAmBF,QAAQ,CAACG,SAA5B,EAAuC;AACrC,UAAIH,QAAQ,CAACG,SAAT,CAAmBC,cAAnB,CAAkCF,IAAlC,CAAJ,EAA6C;AAC3C,YAAIA,IAAI,CAACG,MAAL,CAAY,CAAZ,MAAmB,GAAvB,EAA4B;AAC1BJ,UAAAA,gBAAgB,CAACC,IAAI,CAACI,KAAL,CAAW,CAAX,CAAD,CAAhB,GAAkCN,QAAQ,CAACG,SAAT,CAAmBD,IAAnB,CAAlC;AACD;AACF;AACF;;AAED,SAAKK,OAAL,CAAaN,gBAAb;AACD,GAfD,CADmF,CAkBnF;;;AACA,MAAIO,KAAK,CAACC,OAAN,CAAcX,aAAd,CAAJ,EAAkC;AAChCA,IAAAA,aAAa,CAACY,OAAd,CAAsBX,cAAtB;AACA;AACD,GAtBkF,CAwBnF;;;AACAA,EAAAA,cAAc,CAACD,aAAD,CAAd;AACD,CA1BD","sourcesContent":["Template.prototype.inheritsHelpersFrom = function inheritsHelpersFrom(otherTemplate) {\n  const inheritHelpers = template => {\n    // String template names can be provided and template object is looked up\n    if (typeof template === 'string') template = Template[template];\n    if (!template) return;\n\n    const inheritedHelpers = {};\n    for (const name in template.__helpers) {\n      if (template.__helpers.hasOwnProperty(name)) {\n        if (name.charAt(0) === ' ') {\n          inheritedHelpers[name.slice(1)] = template.__helpers[name];\n        }\n      }\n    }\n\n    this.helpers(inheritedHelpers);\n  };\n\n  // Accept an array as otherTemplate argument\n  if (Array.isArray(otherTemplate)) {\n    otherTemplate.forEach(inheritHelpers);\n    return;\n  }\n\n  // otherTemplate is a string\n  inheritHelpers(otherTemplate);\n};\n"]},"sourceType":"script","hash":"fd7c6c4c45ac6ece8cb474f6a517761c8181dbe1"}
