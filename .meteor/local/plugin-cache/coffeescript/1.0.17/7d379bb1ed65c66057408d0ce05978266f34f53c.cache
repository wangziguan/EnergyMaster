{"source":"__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nAutoForm.addHooks(['admin_insert', 'admin_update', 'adminNewUser', 'adminUpdateUser', 'adminSendResetPasswordEmail', 'adminChangePassword'], {\n  beginSubmit: function() {\n    return $('.btn-primary').addClass('disabled');\n  },\n  endSubmit: function() {\n    return $('.btn-primary').removeClass('disabled');\n  },\n  onError: function(formType, error) {\n    return AdminDashboard.alertFailure(error.message);\n  }\n});\n\nAutoForm.hooks({\n  admin_insert: {\n    onSubmit: function(insertDoc, updateDoc, currentDoc) {\n      var hook;\n      hook = this;\n      Meteor.call('adminInsertDoc', insertDoc, Session.get('admin_collection_name'), function(e, r) {\n        if (e) {\n          return hook.done(e);\n        } else {\n          return adminCallback('onInsert', [Session.get('admin_collection_name', insertDoc, updateDoc, currentDoc)], function(collection) {\n            return hook.done(null, collection);\n          });\n        }\n      });\n      return false;\n    },\n    onSuccess: function(formType, collection) {\n      AdminDashboard.alertSuccess('Successfully created');\n      return Router.go(\"/admin/\" + collection);\n    }\n  },\n  admin_update: {\n    onSubmit: function(insertDoc, updateDoc, currentDoc) {\n      var hook;\n      hook = this;\n      Meteor.call('adminUpdateDoc', updateDoc, Session.get('admin_collection_name'), Session.get('admin_id'), function(e, r) {\n        if (e) {\n          return hook.done(e);\n        } else {\n          return adminCallback('onUpdate', [Session.get('admin_collection_name', insertDoc, updateDoc, currentDoc)], function(collection) {\n            return hook.done(null, collection);\n          });\n        }\n      });\n      return false;\n    },\n    onSuccess: function(formType, collection) {\n      AdminDashboard.alertSuccess('Successfully updated');\n      return Router.go(\"/admin/\" + collection);\n    }\n  },\n  adminNewUser: {\n    onSuccess: function(formType, result) {\n      AdminDashboard.alertSuccess('Created user');\n      return Router.go('/admin/Users');\n    }\n  },\n  adminUpdateUser: {\n    onSubmit: function(insertDoc, updateDoc, currentDoc) {\n      Meteor.call('adminUpdateUser', updateDoc, Session.get('admin_id'), this.done);\n      return false;\n    },\n    onSuccess: function(formType, result) {\n      AdminDashboard.alertSuccess('Updated user');\n      return Router.go('/admin/Users');\n    }\n  },\n  adminSendResetPasswordEmail: {\n    onSuccess: function(formType, result) {\n      return AdminDashboard.alertSuccess('Email sent');\n    }\n  },\n  adminChangePassword: {\n    onSuccess: function(operation, result, template) {\n      return AdminDashboard.alertSuccess('Password reset');\n    }\n  }\n});\n","sourceMap":{"version":3,"file":"/lib/client/js/autoForm.coffee.js","sourceRoot":"","sources":["/packages/wangziguan_admin/lib/client/js/autoForm.coffee"],"names":[],"mappings":"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","sourcesContent":["# Add hooks used by many forms\nAutoForm.addHooks [\n\t\t'admin_insert',\n\t\t'admin_update',\n\t\t'adminNewUser',\n\t\t'adminUpdateUser',\n\t\t'adminSendResetPasswordEmail',\n\t\t'adminChangePassword'],\n\tbeginSubmit: ->\n\t\t$('.btn-primary').addClass('disabled')\n\tendSubmit: ->\n\t\t$('.btn-primary').removeClass('disabled')\n\tonError: (formType, error)->\n\t\tAdminDashboard.alertFailure error.message\n\nAutoForm.hooks\n\tadmin_insert:\n\t\tonSubmit: (insertDoc, updateDoc, currentDoc)->\n\t\t\thook = @\n\t\t\tMeteor.call 'adminInsertDoc', insertDoc, Session.get('admin_collection_name'), (e,r)->\n\t\t\t\tif e\n\t\t\t\t\thook.done(e)\n\t\t\t\telse\n\t\t\t\t\tadminCallback 'onInsert', [Session.get 'admin_collection_name', insertDoc, updateDoc, currentDoc], (collection) ->\n\t\t\t\t\t\thook.done null, collection\n\t\t\treturn false\n\t\tonSuccess: (formType, collection)->\n\t\t\tAdminDashboard.alertSuccess 'Successfully created'\n\t\t\tRouter.go \"/admin/#{collection}\"\n\n\tadmin_update:\n\t\tonSubmit: (insertDoc, updateDoc, currentDoc)->\n\t\t\thook = @\n\t\t\tMeteor.call 'adminUpdateDoc', updateDoc, Session.get('admin_collection_name'), Session.get('admin_id'), (e,r)->\n\t\t\t\tif e\n\t\t\t\t\thook.done(e)\n\t\t\t\telse\n\t\t\t\t\tadminCallback 'onUpdate', [Session.get 'admin_collection_name', insertDoc, updateDoc, currentDoc], (collection) ->\n\t\t\t\t\t\thook.done null, collection\n\t\t\treturn false\n\t\tonSuccess: (formType, collection)->\n\t\t\tAdminDashboard.alertSuccess 'Successfully updated'\n\t\t\tRouter.go \"/admin/#{collection}\"\n\n\tadminNewUser:\n\t\tonSuccess: (formType, result)->\n\t\t\tAdminDashboard.alertSuccess 'Created user'\n\t\t\tRouter.go '/admin/Users'\n\n\tadminUpdateUser:\n\t\tonSubmit: (insertDoc, updateDoc, currentDoc)->\n\t\t\tMeteor.call 'adminUpdateUser', updateDoc, Session.get('admin_id'), @done\n\t\t\treturn false\n\t\tonSuccess: (formType, result)->\n\t\t\tAdminDashboard.alertSuccess 'Updated user'\n\t\t\tRouter.go '/admin/Users'\n\n\tadminSendResetPasswordEmail:\n\t\tonSuccess: (formType, result)->\n\t\t\tAdminDashboard.alertSuccess 'Email sent'\n\n\tadminChangePassword:\n\t\tonSuccess: (operation, result, template)->\n\t\t\tAdminDashboard.alertSuccess 'Password reset'\n"]}}