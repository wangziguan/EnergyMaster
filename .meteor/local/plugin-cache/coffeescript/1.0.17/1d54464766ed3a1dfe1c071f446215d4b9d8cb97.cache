{"source":"__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nMeteor.methods({\n  adminInsertDoc: function(doc, collection) {\n    var result;\n    check(arguments, [Match.Any]);\n    if (Roles.userIsInRole(this.userId, ['admin'])) {\n      this.unblock();\n      result = adminCollectionObject(collection).insert(doc);\n      return result;\n    }\n  },\n  adminUpdateDoc: function(modifier, collection, _id) {\n    var result;\n    check(arguments, [Match.Any]);\n    if (Roles.userIsInRole(this.userId, ['admin'])) {\n      this.unblock();\n      result = adminCollectionObject(collection).update({\n        _id: _id\n      }, modifier);\n      return result;\n    }\n  },\n  adminRemoveDoc: function(collection, _id) {\n    check(arguments, [Match.Any]);\n    if (Roles.userIsInRole(this.userId, ['admin'])) {\n      if (collection === 'Users') {\n        return Meteor.users.remove({\n          _id: _id\n        });\n      } else {\n        return adminCollectionObject(collection).remove({\n          _id: _id\n        });\n      }\n    }\n  },\n  adminNewUser: function(doc) {\n    var emails;\n    check(arguments, [Match.Any]);\n    if (Roles.userIsInRole(this.userId, ['admin'])) {\n      emails = doc.email.split(',');\n      return _.each(emails, function(email) {\n        var _id, user;\n        user = {};\n        user.email = email;\n        user.password = doc.password;\n        _id = Accounts.createUser(user);\n        if (doc.sendPassword && (AdminConfig.fromEmail != null)) {\n          Email.send({\n            to: user.email,\n            from: AdminConfig.fromEmail,\n            subject: 'Your account has been created',\n            html: 'You\\'ve just had an account created for ' + Meteor.absoluteUrl() + ' with password ' + doc.password\n          });\n        }\n        if (!doc.sendPassword) {\n          return Accounts.sendEnrollmentEmail(_id);\n        }\n      });\n    }\n  },\n  adminUpdateUser: function(modifier, _id) {\n    var result;\n    check(arguments, [Match.Any]);\n    if (Roles.userIsInRole(this.userId, ['admin'])) {\n      this.unblock();\n      result = Meteor.users.update({\n        _id: _id\n      }, modifier);\n      return result;\n    }\n  },\n  adminSendResetPasswordEmail: function(doc) {\n    check(arguments, [Match.Any]);\n    if (Roles.userIsInRole(this.userId, ['admin'])) {\n      console.log('Changing password for user ' + doc._id);\n      return Accounts.sendResetPasswordEmail(doc._id);\n    }\n  },\n  adminChangePassword: function(doc) {\n    check(arguments, [Match.Any]);\n    if (Roles.userIsInRole(this.userId, ['admin'])) {\n      console.log('Changing password for user ' + doc._id);\n      Accounts.setPassword(doc._id, doc.password);\n      return {\n        label: 'Email user their new password'\n      };\n    }\n  },\n  adminCheckAdmin: function() {\n    var adminEmails, email, user;\n    check(arguments, [Match.Any]);\n    user = Meteor.users.findOne({\n      _id: this.userId\n    });\n    if (this.userId && !Roles.userIsInRole(this.userId, ['admin']) && (user.emails.length > 0)) {\n      email = user.emails[0].address;\n      if (typeof Meteor.settings.adminEmails !== 'undefined') {\n        adminEmails = Meteor.settings.adminEmails;\n        if (adminEmails.indexOf(email) > -1) {\n          console.log('Adding admin user: ' + email);\n          return Roles.addUsersToRoles(this.userId, ['admin'], Roles.GLOBAL_GROUP);\n        }\n      } else if (typeof AdminConfig !== 'undefined' && typeof AdminConfig.adminEmails === 'object') {\n        adminEmails = AdminConfig.adminEmails;\n        if (adminEmails.indexOf(email) > -1) {\n          console.log('Adding admin user: ' + email);\n          return Roles.addUsersToRoles(this.userId, ['admin'], Roles.GLOBAL_GROUP);\n        }\n      } else if (this.userId === Meteor.users.findOne({}, {\n        sort: {\n          createdAt: 1\n        }\n      })._id) {\n        console.log('Making first user admin: ' + email);\n        return Roles.addUsersToRoles(this.userId, ['admin']);\n      }\n    }\n  },\n  adminAddUserToRole: function(_id, role) {\n    check(arguments, [Match.Any]);\n    if (Roles.userIsInRole(this.userId, ['admin'])) {\n      return Roles.addUsersToRoles(_id, role, Roles.GLOBAL_GROUP);\n    }\n  },\n  adminRemoveUserToRole: function(_id, role) {\n    check(arguments, [Match.Any]);\n    if (Roles.userIsInRole(this.userId, ['admin'])) {\n      return Roles.removeUsersFromRoles(_id, role, Roles.GLOBAL_GROUP);\n    }\n  },\n  adminSetCollectionSort: function(collection, _sort) {\n    check(arguments, [Match.Any]);\n    return global.AdminPages[collection].set({\n      sort: _sort\n    });\n  }\n});\n","sourceMap":{"version":3,"file":"/lib/server/methods.coffee.js","sourceRoot":"","sources":["/packages/wangziguan_admin/lib/server/methods.coffee"],"names":[],"mappings":"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","sourcesContent":["Meteor.methods\n\tadminInsertDoc: (doc,collection)->\n\t\tcheck arguments, [Match.Any]\n\t\tif Roles.userIsInRole this.userId, ['admin']\n\t\t\tthis.unblock()\n\t\t\tresult = adminCollectionObject(collection).insert doc\n\t\t\t\t\n\t\t\treturn result\n\n\tadminUpdateDoc: (modifier,collection,_id)->\n\t\tcheck arguments, [Match.Any]\n\t\tif Roles.userIsInRole this.userId, ['admin']\n\t\t\tthis.unblock()\n\t\t\tresult = adminCollectionObject(collection).update {_id:_id},modifier\n\t\t\treturn result\n\n\tadminRemoveDoc: (collection,_id)->\n\t\tcheck arguments, [Match.Any]\n\t\tif Roles.userIsInRole this.userId, ['admin']\n\t\t\tif collection == 'Users'\n\t\t\t\tMeteor.users.remove {_id:_id}\n\t\t\telse\n\t\t\t\t# global[collection].remove {_id:_id}\n\t\t\t\tadminCollectionObject(collection).remove {_id: _id}\n\n\n\tadminNewUser: (doc) ->\n\t\tcheck arguments, [Match.Any]\n\t\tif Roles.userIsInRole this.userId, ['admin']\n\t\t\temails = doc.email.split(',')\n\t\t\t_.each emails, (email)->\n\t\t\t\tuser = {}\n\t\t\t\tuser.email = email\n\t\t\t\tuser.password = doc.password\n\n\t\t\t\t_id = Accounts.createUser user\n\n\t\t\t\tif doc.sendPassword and AdminConfig.fromEmail?\n\t\t\t\t\tEmail.send\n\t\t\t\t\t\tto: user.email\n\t\t\t\t\t\tfrom: AdminConfig.fromEmail\n\t\t\t\t\t\tsubject: 'Your account has been created'\n\t\t\t\t\t\thtml: 'You\\'ve just had an account created for ' + Meteor.absoluteUrl() + ' with password ' + doc.password\n\n\t\t\t\tif not doc.sendPassword\n\t\t\t\t\tAccounts.sendEnrollmentEmail _id\n\n\tadminUpdateUser: (modifier,_id)->\n\t\tcheck arguments, [Match.Any]\n\t\tif Roles.userIsInRole this.userId, ['admin']\n\t\t\tthis.unblock()\n\t\t\tresult = Meteor.users.update {_id:_id}, modifier\n\t\t\treturn result\n\n\tadminSendResetPasswordEmail: (doc)->\n\t\tcheck arguments, [Match.Any]\n\t\tif Roles.userIsInRole this.userId, ['admin']\n\t\t\tconsole.log 'Changing password for user ' + doc._id\n\t\t\tAccounts.sendResetPasswordEmail(doc._id)\n\n\tadminChangePassword: (doc)->\n\t\tcheck arguments, [Match.Any]\n\t\tif Roles.userIsInRole this.userId, ['admin']\n\t\t\tconsole.log 'Changing password for user ' + doc._id\n\t\t\tAccounts.setPassword(doc._id, doc.password)\n\t\t\tlabel: 'Email user their new password'\n\n\tadminCheckAdmin: ->\n\t\tcheck arguments, [Match.Any]\n\t\tuser = Meteor.users.findOne(_id:this.userId)\n\t\tif this.userId and !Roles.userIsInRole(this.userId, ['admin']) and (user.emails.length > 0)\n\t\t\temail = user.emails[0].address\n\t\t\tif typeof Meteor.settings.adminEmails != 'undefined'\n\t\t\t\tadminEmails = Meteor.settings.adminEmails\n\t\t\t\tif adminEmails.indexOf(email) > -1\n\t\t\t\t\tconsole.log 'Adding admin user: ' + email\n\t\t\t\t\tRoles.addUsersToRoles this.userId, ['admin'], Roles.GLOBAL_GROUP\n\t\t\telse if typeof AdminConfig != 'undefined' and typeof AdminConfig.adminEmails == 'object'\n\t\t\t\tadminEmails = AdminConfig.adminEmails\n\t\t\t\tif adminEmails.indexOf(email) > -1\n\t\t\t\t\tconsole.log 'Adding admin user: ' + email\n\t\t\t\t\tRoles.addUsersToRoles this.userId, ['admin'], Roles.GLOBAL_GROUP\n\t\t\telse if this.userId == Meteor.users.findOne({},{sort:{createdAt:1}})._id\n\t\t\t\tconsole.log 'Making first user admin: ' + email\n\t\t\t\tRoles.addUsersToRoles this.userId, ['admin']\n\n\tadminAddUserToRole: (_id,role)->\n\t\tcheck arguments, [Match.Any]\n\t\tif Roles.userIsInRole this.userId, ['admin']\n\t\t\tRoles.addUsersToRoles _id, role, Roles.GLOBAL_GROUP\n\n\tadminRemoveUserToRole: (_id,role)->\n\t\tcheck arguments, [Match.Any]\n\t\tif Roles.userIsInRole this.userId, ['admin']\n\t\t\tRoles.removeUsersFromRoles _id, role, Roles.GLOBAL_GROUP\n\n\tadminSetCollectionSort: (collection, _sort) ->\n\t\tcheck arguments, [Match.Any]\n\t\tglobal.AdminPages[collection].set\n\t\t\tsort: _sort\n"]}}