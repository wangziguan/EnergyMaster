{"source":"__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nthis.adminCollectionObject = function(collection) {\n  if (typeof AdminConfig.collections[collection] !== 'undefined' && typeof AdminConfig.collections[collection].collectionObject !== 'undefined') {\n    return AdminConfig.collections[collection].collectionObject;\n  } else {\n    return lookup(collection);\n  }\n};\n\nthis.adminCallback = function(name, args, callback) {\n  var ref1, ref2, stop;\n  stop = false;\n  if (typeof (typeof AdminConfig !== \"undefined\" && AdminConfig !== null ? (ref1 = AdminConfig.callbacks) != null ? ref1[name] : void 0 : void 0) === 'function') {\n    stop = (ref2 = AdminConfig.callbacks)[name].apply(ref2, args) === false;\n  }\n  if (typeof callback === 'function') {\n    if (!stop) {\n      return callback.apply(null, args);\n    }\n  }\n};\n\nthis.lookup = function(obj, root, required) {\n  var arr, ref;\n  if (required == null) {\n    required = true;\n  }\n  if (typeof root === 'undefined') {\n    root = Meteor.isServer ? global : window;\n  }\n  if (typeof obj === 'string') {\n    ref = root;\n    arr = obj.split('.');\n    while (arr.length && (ref = ref[arr.shift()])) {\n      continue;\n    }\n    if (!ref && required) {\n      throw new Error(obj + ' is not in the ' + root.toString());\n    } else {\n      return ref;\n    }\n  }\n  return obj;\n};\n\nthis.parseID = function(id) {\n  if (typeof id === 'string') {\n    if (id.indexOf(\"ObjectID\") > -1) {\n      return new Mongo.ObjectID(id.slice(id.indexOf('\"') + 1, id.lastIndexOf('\"')));\n    } else {\n      return id;\n    }\n  } else {\n    return id;\n  }\n};\n\nthis.parseIDs = function(ids) {\n  return _.map(ids, function(id) {\n    return parseID(id);\n  });\n};\n","sourceMap":{"version":3,"file":"/lib/both/utils.coffee.js","sourceRoot":"","sources":["/packages/wangziguan_admin/lib/both/utils.coffee"],"names":[],"mappings":";AAAA,IAAC,CAAA,qBAAD,GAAyB,SAAC,UAAD,GAAA;AACxB,EAAA,IAAG,MAAA,CAAA,WAAkB,CAAC,WAAY,CAAA,UAAA,CAA/B,KAA8C,WAA9C,IAA8D,MAAA,CAAA,WAAkB,CAAC,WAAY,CAAA,UAAA,CAAW,CAAC,gBAA3C,KAA+D,WAAhI;WACC,WAAW,CAAC,WAAY,CAAA,UAAA,CAAW,CAAC,iBADrC;GAAA,MAAA;WAGC,MAAA,CAAO,UAAP,EAHD;GADwB;AAAA,CAAzB,CAAA;;AAAA,IAMC,CAAA,aAAD,GAAiB,SAAC,IAAD,EAAO,IAAP,EAAa,QAAb,GAAA;AAChB,MAAA,gBAAA;AAAA,EAAA,IAAA,GAAO,KAAP,CAAA;AACA,EAAA,IAAG,MAAA,CAAA,2GAA+B,CAAA,IAAA,oBAA/B,KAAwC,UAA3C;AACC,IAAA,IAAA,GAAO,QAAA,WAAW,CAAC,SAAZ,CAAsB,CAAA,IAAA,CAAtB,aAA4B,IAA5B,CAAA,KAAwC,KAA/C,CADD;GADA;AAGA,EAAA,IAAG,MAAA,CAAA,QAAA,KAAmB,UAAtB;AACC,IAAA,IAAA,CAAA,IAAA;aAAA,QAAA,aAAS,IAAT,EAAA;KADD;GAJgB;AAAA,CANjB,CAAA;;AAAA,IAaC,CAAA,MAAD,GAAU,SAAC,GAAD,EAAM,IAAN,EAAY,QAAZ,GAAA;AACT,MAAA,QAAA;;IADqB,WAAS;GAC9B;AAAA,EAAA,IAAG,MAAA,CAAA,IAAA,KAAe,WAAlB;AACC,IAAA,IAAA,GAAU,MAAM,CAAC,QAAV,GAAwB,MAAxB,GAAoC,MAA3C,CADD;GAAA;AAEA,EAAA,IAAG,MAAA,CAAA,GAAA,KAAc,QAAjB;AACC,IAAA,GAAA,GAAM,IAAN,CAAA;AAAA,IACA,GAAA,GAAM,GAAG,CAAC,KAAJ,CAAU,GAAV,CADN,CAAA;AAES,WAAM,GAAG,CAAC,MAAJ,IAAe,CAAC,GAAA,GAAM,GAAI,CAAA,GAAG,CAAC,KAAJ,CAAA,CAAA,CAAX,CAArB,GAAA;AAAT,eAAS;IAAA,CAFT;AAGA,IAAA,IAAG,CAAA,GAAA,IAAY,QAAf;AACC,YAAU,IAAA,KAAA,CAAM,GAAA,GAAM,iBAAN,GAA0B,IAAI,CAAC,QAAL,CAAA,CAAhC,CAAV,CADD;KAAA,MAAA;AAGC,aAAO,GAAP,CAHD;KAJD;GAFA;AAUA,SAAO,GAAP,CAXS;AAAA,CAbV,CAAA;;AAAA,IA0BC,CAAA,OAAD,GAAW,SAAC,EAAD,GAAA;AACV,EAAA,IAAG,MAAA,CAAA,EAAA,KAAa,QAAhB;AACC,IAAA,IAAG,EAAE,CAAC,OAAH,CAAW,UAAX,CAAA,GAAyB,CAAA,CAA5B;AACC,aAAW,IAAA,KAAK,CAAC,QAAN,CAAe,EAAE,CAAC,KAAH,CAAS,EAAE,CAAC,OAAH,CAAW,GAAX,CAAA,GAAkB,CAA3B,EAA6B,EAAE,CAAC,WAAH,CAAe,GAAf,CAA7B,CAAf,CAAX,CADD;KAAA,MAAA;AAGC,aAAO,EAAP,CAHD;KADD;GAAA,MAAA;AAMC,WAAO,EAAP,CAND;GADU;AAAA,CA1BX,CAAA;;AAAA,IAmCC,CAAA,QAAD,GAAY,SAAC,GAAD,GAAA;AACR,SAAO,CAAC,CAAC,GAAF,CAAM,GAAN,EAAW,SAAC,EAAD,GAAA;WACd,OAAA,CAAQ,EAAR,EADc;EAAA,CAAX,CAAP,CADQ;AAAA,CAnCZ,CAAA","sourcesContent":["@adminCollectionObject = (collection) ->\n\tif typeof AdminConfig.collections[collection] != 'undefined' and typeof AdminConfig.collections[collection].collectionObject != 'undefined'\n\t\tAdminConfig.collections[collection].collectionObject\n\telse\n\t\tlookup collection\n\n@adminCallback = (name, args, callback) ->\n\tstop = false\n\tif typeof AdminConfig?.callbacks?[name] == 'function'\n\t\tstop = AdminConfig.callbacks[name](args...) is false\n\tif typeof callback == 'function'\n\t\tcallback args... unless stop\n\n@lookup = (obj, root, required=true) ->\n\tif typeof root == 'undefined'\n\t\troot = if Meteor.isServer then global else window\n\tif typeof obj == 'string'\n\t\tref = root\n\t\tarr = obj.split '.'\n\t\tcontinue while arr.length and (ref = ref[arr.shift()])\n\t\tif not ref and required\n\t\t\tthrow new Error(obj + ' is not in the ' + root.toString())\n\t\telse\n\t\t\treturn ref\n\treturn obj\n\t\n@parseID = (id) ->\n\tif typeof id == 'string'\n\t\tif(id.indexOf(\"ObjectID\") > -1)\n\t\t\treturn new Mongo.ObjectID(id.slice(id.indexOf('\"') + 1,id.lastIndexOf('\"')))\n\t\telse\n\t\t\treturn id\n\telse\n\t\treturn id\n\n@parseIDs = (ids) ->\n    return _.map ids, (id) ->\n        parseID id\n"]}}