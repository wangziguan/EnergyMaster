{"source":"__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar Spacebars, Template, func, helpers, isActive, name,\n  hasProp = {}.hasOwnProperty;\n\nif (!(Package.templating && Package.spacebars)) {\n  return;\n}\n\nTemplate = Package.templating.Template;\n\nSpacebars = Package.spacebars.Spacebars;\n\nisActive = function(type, inverse) {\n  var helperName;\n  if (inverse == null) {\n    inverse = false;\n  }\n  helperName = 'is';\n  if (inverse) {\n    helperName += 'Not';\n  }\n  helperName += \"Active\" + type;\n  return function(options, attributes) {\n    var className, isPath, name, path, pattern, ref, regex, result, t;\n    if (options == null) {\n      options = {};\n    }\n    if (attributes == null) {\n      attributes = {};\n    }\n    if (Match.test(options, Spacebars.kw)) {\n      options = options.hash;\n    }\n    if (Match.test(attributes, Spacebars.kw)) {\n      attributes = attributes.hash;\n    }\n    if (Match.test(options, String)) {\n      if (share.config.equals('regex', true)) {\n        options = {\n          regex: options\n        };\n      } else if (type === 'Path') {\n        options = {\n          path: options\n        };\n      } else {\n        options = {\n          name: options\n        };\n      }\n    }\n    options = _.defaults(attributes, options);\n    pattern = Match.ObjectIncluding({\n      \"class\": Match.Optional(String),\n      className: Match.Optional(String),\n      regex: Match.Optional(Match.OneOf(RegExp, String)),\n      name: Match.Optional(String),\n      path: Match.Optional(String)\n    });\n    check(options, pattern);\n    regex = options.regex, name = options.name, path = options.path;\n    className = (ref = options[\"class\"]) != null ? ref : options.className;\n    if (type === 'Path') {\n      name = null;\n    } else {\n      path = null;\n    }\n    if (!(regex || name || path)) {\n      t = type === 'Route' ? 'name' : type;\n      t = t.toLowerCase();\n      console.error((\"Invalid argument, \" + helperName + \" takes \\\"\" + t + \"\\\", \") + (t + \"=\\\"\" + t + \"\\\" or regex=\\\"regex\\\"\"));\n      return false;\n    }\n    if (Match.test(regex, String)) {\n      if (share.config.equals('caseSensitive', false)) {\n        regex = new RegExp(regex, 'i');\n      } else {\n        regex = new RegExp(regex);\n      }\n    }\n    if (regex == null) {\n      regex = name || path;\n    }\n    if (inverse) {\n      if (className == null) {\n        className = share.config.get('disabledClass');\n      }\n    } else {\n      if (className == null) {\n        className = share.config.get('activeClass');\n      }\n    }\n    if (type === 'Path') {\n      isPath = true;\n    }\n    if (isPath) {\n      result = ActiveRoute.path(regex);\n    } else {\n      options = _.defaults(attributes, attributes.data);\n      result = ActiveRoute.name(regex, _.omit(options, ['class', 'className', 'data', 'regex', 'name', 'path']));\n    }\n    if (inverse) {\n      result = !result;\n    }\n    if (result) {\n      return className;\n    } else {\n      return false;\n    }\n  };\n};\n\nhelpers = {\n  isActiveRoute: isActive('Route'),\n  isActivePath: isActive('Path'),\n  isNotActiveRoute: isActive('Route', true),\n  isNotActivePath: isActive('Path', true)\n};\n\nfor (name in helpers) {\n  if (!hasProp.call(helpers, name)) continue;\n  func = helpers[name];\n  Template.registerHelper(name, func);\n}\n","sourceMap":{"version":3,"file":"/client/helpers.coffee.js","sourceRoot":"","sources":["/packages/zimme_active-route/client/helpers.coffee"],"names":[],"mappings":";AAAA,IAAA,kDAAA;EAAA,2BAAA;;AAAA,IAAA,CAAA,CAAc,OAAO,CAAC,UAAR,IAAuB,OAAO,CAAC,SAA7C,CAAA;AAAA,QAAA,CAAA;CAAA;;AAAA,QAEA,GAAW,OAAO,CAAC,UAAU,CAAC,QAF9B,CAAA;;AAAA,SAGA,GAAY,OAAO,CAAC,SAAS,CAAC,SAH9B,CAAA;;AAAA,QAKA,GAAW,SAAC,IAAD,EAAO,OAAP,GAAA;AACT,MAAA,UAAA;;IADgB,UAAU;GAC1B;AAAA,EAAA,UAAA,GAAa,IAAb,CAAA;AACA,EAAA,IAAuB,OAAvB;AAAA,IAAA,UAAA,IAAc,KAAd,CAAA;GADA;AAAA,EAEA,UAAA,IAAc,QAAA,GAAS,IAFvB,CAAA;SAIA,SAAC,OAAD,EAAe,UAAf,GAAA;AACE,QAAA,6DAAA;;MADD,UAAU;KACT;;MADa,aAAa;KAC1B;AAAA,IAAA,IAAG,KAAK,CAAC,IAAN,CAAW,OAAX,EAAoB,SAAS,CAAC,EAA9B,CAAH;AACE,MAAA,OAAA,GAAU,OAAO,CAAC,IAAlB,CADF;KAAA;AAGA,IAAA,IAAG,KAAK,CAAC,IAAN,CAAW,UAAX,EAAuB,SAAS,CAAC,EAAjC,CAAH;AACE,MAAA,UAAA,GAAa,UAAU,CAAC,IAAxB,CADF;KAHA;AAMA,IAAA,IAAG,KAAK,CAAC,IAAN,CAAW,OAAX,EAAoB,MAApB,CAAH;AACE,MAAA,IAAG,KAAK,CAAC,MAAM,CAAC,MAAb,CAAoB,OAApB,EAA6B,IAA7B,CAAH;AACE,QAAA,OAAA,GACE;AAAA,UAAA,KAAA,EAAO,OAAP;SADF,CADF;OAAA,MAIK,IAAG,IAAA,KAAQ,MAAX;AACH,QAAA,OAAA,GACE;AAAA,UAAA,IAAA,EAAM,OAAN;SADF,CADG;OAAA,MAAA;AAKH,QAAA,OAAA,GACE;AAAA,UAAA,IAAA,EAAM,OAAN;SADF,CALG;OALP;KANA;AAAA,IAmBA,OAAA,GAAU,CAAC,CAAC,QAAF,CAAW,UAAX,EAAuB,OAAvB,CAnBV,CAAA;AAAA,IAqBA,OAAA,GAAU,KAAK,CAAC,eAAN,CACR;AAAA,MAAA,OAAA,EAAO,KAAK,CAAC,QAAN,CAAe,MAAf,CAAP;AAAA,MACA,SAAA,EAAW,KAAK,CAAC,QAAN,CAAe,MAAf,CADX;AAAA,MAEA,KAAA,EAAO,KAAK,CAAC,QAAN,CAAe,KAAK,CAAC,KAAN,CAAY,MAAZ,EAAoB,MAApB,CAAf,CAFP;AAAA,MAGA,IAAA,EAAM,KAAK,CAAC,QAAN,CAAe,MAAf,CAHN;AAAA,MAIA,IAAA,EAAM,KAAK,CAAC,QAAN,CAAe,MAAf,CAJN;KADQ,CArBV,CAAA;AAAA,IA4BA,KAAA,CAAM,OAAN,EAAe,OAAf,CA5BA,CAAA;AAAA,IA8BC,gBAAA,KAAD,EAAQ,eAAA,IAAR,EAAc,eAAA,IA9Bd,CAAA;AAAA,IAgCA,SAAA,4CAA4B,OAAO,CAAC,SAhCpC,CAAA;AAkCA,IAAA,IAAG,IAAA,KAAQ,MAAX;AACE,MAAA,IAAA,GAAO,IAAP,CADF;KAAA,MAAA;AAIE,MAAA,IAAA,GAAO,IAAP,CAJF;KAlCA;AAwCA,IAAA,IAAA,CAAA,CAAO,KAAA,IAAS,IAAT,IAAiB,IAAxB,CAAA;AACE,MAAA,CAAA,GAAO,IAAA,KAAQ,OAAX,GAAwB,MAAxB,GAAoC,IAAxC,CAAA;AAAA,MACA,CAAA,GAAI,CAAC,CAAC,WAAF,CAAA,CADJ,CAAA;AAAA,MAEA,OAAO,CAAC,KAAR,CAAc,CAAA,oBAAA,GAAqB,UAArB,GAAgC,WAAhC,GAA2C,CAA3C,GAA6C,MAA7C,CAAA,GACZ,CAAG,CAAD,GAAG,KAAH,GAAQ,CAAR,GAAU,uBAAZ,CADF,CAFA,CAAA;AAIA,aAAO,KAAP,CALF;KAxCA;AA+CA,IAAA,IAAG,KAAK,CAAC,IAAN,CAAW,KAAX,EAAkB,MAAlB,CAAH;AACE,MAAA,IAAG,KAAK,CAAC,MAAM,CAAC,MAAb,CAAoB,eAApB,EAAqC,KAArC,CAAH;AACE,QAAA,KAAA,GAAY,IAAA,MAAA,CAAO,KAAP,EAAc,GAAd,CAAZ,CADF;OAAA,MAAA;AAIE,QAAA,KAAA,GAAY,IAAA,MAAA,CAAO,KAAP,CAAZ,CAJF;OADF;KA/CA;;MAsDA,QAAS,IAAA,IAAQ;KAtDjB;AAwDA,IAAA,IAAG,OAAH;;QACE,YAAa,KAAK,CAAC,MAAM,CAAC,GAAb,CAAiB,eAAjB;OADf;KAAA,MAAA;;QAGE,YAAa,KAAK,CAAC,MAAM,CAAC,GAAb,CAAiB,aAAjB;OAHf;KAxDA;AA6DA,IAAA,IAAiB,IAAA,KAAQ,MAAzB;AAAA,MAAA,MAAA,GAAS,IAAT,CAAA;KA7DA;AA+DA,IAAA,IAAG,MAAH;AACE,MAAA,MAAA,GAAS,WAAW,CAAC,IAAZ,CAAiB,KAAjB,CAAT,CADF;KAAA,MAAA;AAIE,MAAA,OAAA,GAAU,CAAC,CAAC,QAAF,CAAW,UAAX,EAAuB,UAAU,CAAC,IAAlC,CAAV,CAAA;AAAA,MACA,MAAA,GAAS,WAAW,CAAC,IAAZ,CAAiB,KAAjB,EAAwB,CAAC,CAAC,IAAF,CAAO,OAAP,EAAgB,CAC/C,OAD+C,EACtC,WADsC,EACzB,MADyB,EAE/C,OAF+C,EAEtC,MAFsC,EAE9B,MAF8B,CAAhB,CAAxB,CADT,CAJF;KA/DA;AAyEA,IAAA,IAAuB,OAAvB;AAAA,MAAA,MAAA,GAAS,CAAA,MAAT,CAAA;KAzEA;AA2EA,IAAA,IAAG,MAAH;aAAe,UAAf;KAAA,MAAA;aAA8B,MAA9B;KA5EF;EAAA,EALS;AAAA,CALX,CAAA;;AAAA,OAwFA,GACE;AAAA,EAAA,aAAA,EAAe,QAAA,CAAS,OAAT,CAAf;AAAA,EAEA,YAAA,EAAc,QAAA,CAAS,MAAT,CAFd;AAAA,EAIA,gBAAA,EAAkB,QAAA,CAAS,OAAT,EAAkB,IAAlB,CAJlB;AAAA,EAMA,eAAA,EAAiB,QAAA,CAAS,MAAT,EAAiB,IAAjB,CANjB;CAzFF,CAAA;;AAiGA,KAAA,eAAA;;uBAAA;AAAA,EAAA,QAAQ,CAAC,cAAT,CAAwB,IAAxB,EAA8B,IAA9B,CAAA,CAAA;AAAA,CAjGA","sourcesContent":["return unless Package.templating and Package.spacebars\n\nTemplate = Package.templating.Template\nSpacebars = Package.spacebars.Spacebars\n\nisActive = (type, inverse = false) ->\n  helperName = 'is'\n  helperName += 'Not' if inverse\n  helperName += \"Active#{type}\"\n\n  (options = {}, attributes = {}) ->\n    if Match.test options, Spacebars.kw\n      options = options.hash\n\n    if Match.test attributes, Spacebars.kw\n      attributes = attributes.hash\n\n    if Match.test options, String\n      if share.config.equals 'regex', true\n        options =\n          regex: options\n\n      else if type is 'Path'\n        options =\n          path: options\n\n      else\n        options =\n          name: options\n\n    options = _.defaults attributes, options\n\n    pattern = Match.ObjectIncluding\n      class: Match.Optional String\n      className: Match.Optional String\n      regex: Match.Optional Match.OneOf RegExp, String\n      name: Match.Optional String\n      path: Match.Optional String\n\n    check options, pattern\n\n    {regex, name, path} = options\n\n    className = options.class ? options.className\n\n    if type is 'Path'\n      name = null\n\n    else\n      path = null\n\n    unless regex or name or path\n      t = if type is 'Route' then 'name' else type\n      t = t.toLowerCase()\n      console.error \"Invalid argument, #{helperName} takes \\\"#{t}\\\", \" +\n        \"#{t}=\\\"#{t}\\\" or regex=\\\"regex\\\"\"\n      return false\n\n    if Match.test regex, String\n      if share.config.equals 'caseSensitive', false\n        regex = new RegExp regex, 'i'\n\n      else\n        regex = new RegExp regex\n\n    regex ?= name or path\n\n    if inverse\n      className ?= share.config.get 'disabledClass'\n    else\n      className ?= share.config.get 'activeClass'\n\n    isPath = true if type is 'Path'\n\n    if isPath\n      result = ActiveRoute.path regex\n\n    else\n      options = _.defaults attributes, attributes.data\n      result = ActiveRoute.name regex, _.omit options, [\n        'class', 'className', 'data'\n        'regex', 'name', 'path'\n      ]\n\n    result = not result if inverse\n\n    if result then className else false\n\nhelpers =\n  isActiveRoute: isActive 'Route'\n\n  isActivePath: isActive 'Path'\n\n  isNotActiveRoute: isActive 'Route', true\n\n  isNotActivePath: isActive 'Path', true\n\nTemplate.registerHelper name, func for own name, func of helpers\n"]}}