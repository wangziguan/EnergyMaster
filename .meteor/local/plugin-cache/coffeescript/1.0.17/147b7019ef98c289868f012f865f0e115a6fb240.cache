{"source":"__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\n                   \n\nAdminDashboard = {\n  schemas: {},\n  sidebarItems: [],\n  collectionItems: [],\n  alertSuccess: function(message) {\n    return Session.set('adminSuccess', message);\n  },\n  alertFailure: function(message) {\n    return Session.set('adminError', message);\n  },\n  checkAdmin: function() {\n    if (!Roles.userIsInRole(Meteor.userId(), ['admin'])) {\n      Meteor.call('adminCheckAdmin');\n      if (typeof (typeof AdminConfig !== \"undefined\" && AdminConfig !== null ? AdminConfig.nonAdminRedirectRoute : void 0) === \"string\") {\n        Router.go(AdminConfig.nonAdminRedirectRoute);\n      }\n    }\n    if (typeof this.next === 'function') {\n      return this.next();\n    }\n  },\n  adminRoutes: ['adminDashboard', 'adminDashboardUsersNew', 'adminDashboardUsersEdit', 'adminDashboardView', 'adminDashboardNew', 'adminDashboardEdit'],\n  collectionLabel: function(collection) {\n    var ref;\n    if (collection === 'Users') {\n      return 'Users';\n    } else if ((collection != null) && typeof ((ref = AdminConfig.collections[collection]) != null ? ref.label : void 0) === 'string') {\n      return AdminConfig.collections[collection].label;\n    } else {\n      return Session.get('admin_collection_name');\n    }\n  },\n  addSidebarItem: function(title, url, options) {\n    var item;\n    item = {\n      title: title\n    };\n    if (_.isObject(url) && typeof options === 'undefined') {\n      item.options = url;\n    } else {\n      item.url = url;\n      item.options = options;\n    }\n    return this.sidebarItems.push(item);\n  },\n  extendSidebarItem: function(title, urls) {\n    var existing;\n    if (_.isObject(urls)) {\n      urls = [urls];\n    }\n    existing = _.find(this.sidebarItems, function(item) {\n      return item.title === title;\n    });\n    if (existing) {\n      return existing.options.urls = _.union(existing.options.urls, urls);\n    }\n  },\n  addCollectionItem: function(fn) {\n    return this.collectionItems.push(fn);\n  },\n  path: function(s) {\n    var path;\n    path = '/admin';\n    if (typeof s === 'string' && s.length > 0) {\n      path += (s[0] === '/' ? '' : '/') + s;\n    }\n    return path;\n  }\n};\n\nAdminDashboard.schemas.newUser = new SimpleSchema({\n  email: {\n    type: String,\n    label: \"Email address\"\n  },\n  password: {\n    type: String,\n    label: 'Password'\n  },\n  sendPassword: {\n    type: Boolean,\n    label: 'Send this user their password by email',\n    optional: true\n  }\n});\n\nAdminDashboard.schemas.sendResetPasswordEmail = new SimpleSchema({\n  _id: {\n    type: String\n  }\n});\n\nAdminDashboard.schemas.changePassword = new SimpleSchema({\n  _id: {\n    type: String\n  },\n  password: {\n    type: String\n  }\n});\n","sourceMap":{"version":3,"file":"/lib/both/AdminDashboard.coffee.js","sourceRoot":"","sources":["/packages/wangziguan_admin/lib/both/AdminDashboard.coffee"],"names":[],"mappings":"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","sourcesContent":["AdminDashboard =\n\tschemas: {}\n\tsidebarItems: []\n\tcollectionItems: []\n\talertSuccess: (message)->\n\t\tSession.set 'adminSuccess', message\n\talertFailure: (message)->\n\t\tSession.set 'adminError', message\n\n\tcheckAdmin: ->\n\t\tif not Roles.userIsInRole Meteor.userId(), ['admin']\n\t\t\tMeteor.call 'adminCheckAdmin'\n\t\t\tif (typeof AdminConfig?.nonAdminRedirectRoute == \"string\")\n\t\t\t  Router.go AdminConfig.nonAdminRedirectRoute\n\t\tif typeof @.next == 'function'\n\t\t\t@next()\n\tadminRoutes: ['adminDashboard','adminDashboardUsersNew','adminDashboardUsersEdit','adminDashboardView','adminDashboardNew','adminDashboardEdit']\n\tcollectionLabel: (collection)->\n\t\tif collection == 'Users'\n\t\t\t'Users'\n\t\telse if collection? and typeof AdminConfig.collections[collection]?.label == 'string'\n\t\t\tAdminConfig.collections[collection].label\n\t\telse Session.get 'admin_collection_name'\n\n\taddSidebarItem: (title, url, options) ->\n\t\titem = title: title\n\t\tif _.isObject(url) and typeof options == 'undefined'\n\t\t\titem.options = url\n\t\telse\n\t\t\titem.url = url\n\t\t\titem.options = options\n\n\t\t@sidebarItems.push item\n\n\textendSidebarItem: (title, urls) ->\n\t\tif _.isObject(urls) then urls = [urls]\n\n\t\texisting = _.find @sidebarItems, (item) -> item.title == title\n\t\tif existing\n\t\t\texisting.options.urls = _.union existing.options.urls, urls\n\n\taddCollectionItem: (fn) ->\n\t\t@collectionItems.push fn\n\n\tpath: (s) ->\n\t\tpath = '/admin'\n\t\tif typeof s == 'string' and s.length > 0\n\t\t\tpath += (if s[0] == '/' then '' else '/') + s\n\t\tpath\n\n\nAdminDashboard.schemas.newUser = new SimpleSchema\n\temail: \n\t\ttype: String\n\t\tlabel: \"Email address\"\n\tpassword:\n\t\ttype: String\n\t\tlabel: 'Password'\n\tsendPassword:\n\t\ttype: Boolean\n\t\tlabel: 'Send this user their password by email'\n\t\toptional: true\n\nAdminDashboard.schemas.sendResetPasswordEmail = new SimpleSchema\n\t_id:\n\t\ttype: String\n\nAdminDashboard.schemas.changePassword = new SimpleSchema\n\t_id:\n\t\ttype: String\n\tpassword:\n\t\ttype: String\n"]}}