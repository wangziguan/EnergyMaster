{"source":"__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nMeteor.publishComposite('adminCollectionDoc', function (collection, id) {\n  var ref, ref1;\n  check(collection, String);\n  check(id, Match.OneOf(String, Mongo.ObjectID));\n\n  if (Roles.userIsInRole(this.userId, ['admin'])) {\n    return {\n      find: function () {\n        return adminCollectionObject(collection).find(id);\n      },\n      children: (typeof AdminConfig !== \"undefined\" && AdminConfig !== null ? (ref = AdminConfig.collections) != null ? (ref1 = ref[collection]) != null ? ref1.children : void 0 : void 0 : void 0) || []\n    };\n  } else {\n    return this.ready();\n  }\n});\nMeteor.publish('adminUsers', function () {\n  if (Roles.userIsInRole(this.userId, ['admin'])) {\n    return Meteor.users.find();\n  } else {\n    return this.ready();\n  }\n});\nMeteor.publish('adminUser', function () {\n  return Meteor.users.find(this.userId);\n});\nMeteor.publish('adminCollectionsCount', function () {\n  var handles, self;\n  handles = [];\n  self = this;\n\n  _.each(AdminTables, function (table, name) {\n    var count, id, ready, selector;\n    id = new Mongo.ObjectID();\n    count = 0;\n    table = AdminTables[name];\n    ready = false;\n    selector = table.selector ? table.selector(self.userId) : {};\n    handles.push(table.collection.find().observeChanges({\n      added: function () {\n        count += 1;\n        return ready && self.changed('adminCollectionsCount', id, {\n          count: count\n        });\n      },\n      removed: function () {\n        count -= 1;\n        return ready && self.changed('adminCollectionsCount', id, {\n          count: count\n        });\n      }\n    }));\n    ready = true;\n    return self.added('adminCollectionsCount', id, {\n      collection: name,\n      count: count\n    });\n  });\n\n  self.onStop(function () {\n    return _.each(handles, function (handle) {\n      return handle.stop();\n    });\n  });\n  return self.ready();\n});\nMeteor.publish(null, function () {\n  return Meteor.roles.find({});\n});","sourceMap":{"version":3,"sources":["/packages/wangziguan_admin/lib/server/publish.coffee","/lib/server/publish.coffee"],"names":["Meteor","publishComposite","collection","id","ref","ref1","check","String","Match","OneOf","Mongo","ObjectID","Roles","userIsInRole","userId","find","adminCollectionObject","children","AdminConfig","collections","ready","publish","users","handles","self","_","each","AdminTables","table","name","count","selector","push","observeChanges","added","changed","removed","onStop","handle","stop","roles"],"mappings":"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","file":"packages/wangziguan:admin/lib/server/publish.coffee.map","sourcesContent":["Meteor.publishComposite 'adminCollectionDoc', (collection, id) ->\n\tcheck collection, String\n\tcheck id, Match.OneOf(String, Mongo.ObjectID)\n\tif Roles.userIsInRole this.userId, ['admin']\n\t\tfind: ->\n\t\t\tadminCollectionObject(collection).find(id)\n\t\tchildren: AdminConfig?.collections?[collection]?.children or []\n\telse\n\t\t@ready()\n\nMeteor.publish 'adminUsers', ->\n\tif Roles.userIsInRole @userId, ['admin']\n\t\tMeteor.users.find()\n\telse\n\t\t@ready()\n\nMeteor.publish 'adminUser', ->\n\tMeteor.users.find @userId\n\nMeteor.publish 'adminCollectionsCount', ->\n\thandles = []\n\tself = @\n\n\t_.each AdminTables, (table, name) ->\n\t\tid = new Mongo.ObjectID\n\t\tcount = 0\n\t\ttable = AdminTables[name]\n\t\tready = false\n\t\tselector = if table.selector then table.selector(self.userId) else {}\n\t\thandles.push table.collection.find().observeChanges\n\t\t\tadded: ->\n\t\t\t\tcount += 1\n\t\t\t\tready and self.changed 'adminCollectionsCount', id, {count: count}\n\t\t\tremoved: ->\n\t\t\t\tcount -= 1\n\t\t\t\tready and self.changed 'adminCollectionsCount', id, {count: count}\n\t\tready = true\n\n\t\tself.added 'adminCollectionsCount', id, {collection: name, count: count}\n\n\tself.onStop ->\n\t\t_.each handles, (handle) -> handle.stop()\n\tself.ready()\n\nMeteor.publish null, ->\n\tMeteor.roles.find({})\n","Meteor.publishComposite('adminCollectionDoc', function(collection, id) {\n  var ref, ref1;\n  check(collection, String);\n  check(id, Match.OneOf(String, Mongo.ObjectID));\n  if (Roles.userIsInRole(this.userId, ['admin'])) {\n    return {\n      find: function() {\n        return adminCollectionObject(collection).find(id);\n      },\n      children: (typeof AdminConfig !== \"undefined\" && AdminConfig !== null ? (ref = AdminConfig.collections) != null ? (ref1 = ref[collection]) != null ? ref1.children : void 0 : void 0 : void 0) || []\n    };\n  } else {\n    return this.ready();\n  }\n});\n\nMeteor.publish('adminUsers', function() {\n  if (Roles.userIsInRole(this.userId, ['admin'])) {\n    return Meteor.users.find();\n  } else {\n    return this.ready();\n  }\n});\n\nMeteor.publish('adminUser', function() {\n  return Meteor.users.find(this.userId);\n});\n\nMeteor.publish('adminCollectionsCount', function() {\n  var handles, self;\n  handles = [];\n  self = this;\n  _.each(AdminTables, function(table, name) {\n    var count, id, ready, selector;\n    id = new Mongo.ObjectID;\n    count = 0;\n    table = AdminTables[name];\n    ready = false;\n    selector = table.selector ? table.selector(self.userId) : {};\n    handles.push(table.collection.find().observeChanges({\n      added: function() {\n        count += 1;\n        return ready && self.changed('adminCollectionsCount', id, {\n          count: count\n        });\n      },\n      removed: function() {\n        count -= 1;\n        return ready && self.changed('adminCollectionsCount', id, {\n          count: count\n        });\n      }\n    }));\n    ready = true;\n    return self.added('adminCollectionsCount', id, {\n      collection: name,\n      count: count\n    });\n  });\n  self.onStop(function() {\n    return _.each(handles, function(handle) {\n      return handle.stop();\n    });\n  });\n  return self.ready();\n});\n\nMeteor.publish(null, function() {\n  return Meteor.roles.find({});\n});\n"]}}