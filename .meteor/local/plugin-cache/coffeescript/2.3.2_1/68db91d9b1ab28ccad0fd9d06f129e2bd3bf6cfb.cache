{"source":"__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\n// Add hooks used by many forms\nAutoForm.addHooks(['admin_insert', 'admin_update', 'adminNewUser', 'adminUpdateUser', 'adminSendResetPasswordEmail', 'adminChangePassword'], {\n  beginSubmit: function () {\n    return $('.btn-primary').addClass('disabled');\n  },\n  endSubmit: function () {\n    return $('.btn-primary').removeClass('disabled');\n  },\n  onError: function (formType, error) {\n    return AdminDashboard.alertFailure(error.message);\n  }\n});\nAutoForm.hooks({\n  admin_insert: {\n    onSubmit: function (insertDoc, updateDoc, currentDoc) {\n      var hook;\n      hook = this;\n      Meteor.call('adminInsertDoc', insertDoc, Session.get('admin_collection_name'), function (e, r) {\n        if (e) {\n          return hook.done(e);\n        } else {\n          return adminCallback('onInsert', [Session.get('admin_collection_name', insertDoc, updateDoc, currentDoc)], function (collection) {\n            return hook.done(null, collection);\n          });\n        }\n      });\n      return false;\n    },\n    onSuccess: function (formType, collection) {\n      AdminDashboard.alertSuccess('Successfully created');\n      return Router.go(\"/admin/\".concat(collection));\n    }\n  },\n  admin_update: {\n    onSubmit: function (insertDoc, updateDoc, currentDoc) {\n      var hook;\n      hook = this;\n      Meteor.call('adminUpdateDoc', updateDoc, Session.get('admin_collection_name'), Session.get('admin_id'), function (e, r) {\n        if (e) {\n          return hook.done(e);\n        } else {\n          return adminCallback('onUpdate', [Session.get('admin_collection_name', insertDoc, updateDoc, currentDoc)], function (collection) {\n            return hook.done(null, collection);\n          });\n        }\n      });\n      return false;\n    },\n    onSuccess: function (formType, collection) {\n      AdminDashboard.alertSuccess('Successfully updated');\n      return Router.go(\"/admin/\".concat(collection));\n    }\n  },\n  adminNewUser: {\n    onSuccess: function (formType, result) {\n      AdminDashboard.alertSuccess('Created user');\n      return Router.go('/admin/Users');\n    }\n  },\n  adminUpdateUser: {\n    onSubmit: function (insertDoc, updateDoc, currentDoc) {\n      Meteor.call('adminUpdateUser', updateDoc, Session.get('admin_id'), this.done);\n      return false;\n    },\n    onSuccess: function (formType, result) {\n      AdminDashboard.alertSuccess('Updated user');\n      return Router.go('/admin/Users');\n    }\n  },\n  adminSendResetPasswordEmail: {\n    onSuccess: function (formType, result) {\n      return AdminDashboard.alertSuccess('Email sent');\n    }\n  },\n  adminChangePassword: {\n    onSuccess: function (operation, result, template) {\n      return AdminDashboard.alertSuccess('Password reset');\n    }\n  }\n});","sourceMap":{"version":3,"sources":["/packages/wangziguan_admin/lib/client/js/autoForm.coffee","/lib/client/js/autoForm.coffee"],"names":["AutoForm","addHooks","beginSubmit","$","addClass","endSubmit","removeClass","onError","formType","error","AdminDashboard","alertFailure","message","hooks","admin_insert","onSubmit","insertDoc","updateDoc","currentDoc","hook","Meteor","call","Session","get","e","r","done","adminCallback","collection","onSuccess","alertSuccess","Router","go","admin_update","adminNewUser","result","adminUpdateUser","adminSendResetPasswordEmail","adminChangePassword","operation","template"],"mappings":"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","file":"packages/wangziguan:admin/lib/client/js/autoForm.coffee.map","sourcesContent":["# Add hooks used by many forms\nAutoForm.addHooks [\n\t\t'admin_insert',\n\t\t'admin_update',\n\t\t'adminNewUser',\n\t\t'adminUpdateUser',\n\t\t'adminSendResetPasswordEmail',\n\t\t'adminChangePassword'],\n\tbeginSubmit: ->\n\t\t$('.btn-primary').addClass('disabled')\n\tendSubmit: ->\n\t\t$('.btn-primary').removeClass('disabled')\n\tonError: (formType, error)->\n\t\tAdminDashboard.alertFailure error.message\n\nAutoForm.hooks\n\tadmin_insert:\n\t\tonSubmit: (insertDoc, updateDoc, currentDoc)->\n\t\t\thook = @\n\t\t\tMeteor.call 'adminInsertDoc', insertDoc, Session.get('admin_collection_name'), (e,r)->\n\t\t\t\tif e\n\t\t\t\t\thook.done(e)\n\t\t\t\telse\n\t\t\t\t\tadminCallback 'onInsert', [Session.get 'admin_collection_name', insertDoc, updateDoc, currentDoc], (collection) ->\n\t\t\t\t\t\thook.done null, collection\n\t\t\treturn false\n\t\tonSuccess: (formType, collection)->\n\t\t\tAdminDashboard.alertSuccess 'Successfully created'\n\t\t\tRouter.go \"/admin/#{collection}\"\n\n\tadmin_update:\n\t\tonSubmit: (insertDoc, updateDoc, currentDoc)->\n\t\t\thook = @\n\t\t\tMeteor.call 'adminUpdateDoc', updateDoc, Session.get('admin_collection_name'), Session.get('admin_id'), (e,r)->\n\t\t\t\tif e\n\t\t\t\t\thook.done(e)\n\t\t\t\telse\n\t\t\t\t\tadminCallback 'onUpdate', [Session.get 'admin_collection_name', insertDoc, updateDoc, currentDoc], (collection) ->\n\t\t\t\t\t\thook.done null, collection\n\t\t\treturn false\n\t\tonSuccess: (formType, collection)->\n\t\t\tAdminDashboard.alertSuccess 'Successfully updated'\n\t\t\tRouter.go \"/admin/#{collection}\"\n\n\tadminNewUser:\n\t\tonSuccess: (formType, result)->\n\t\t\tAdminDashboard.alertSuccess 'Created user'\n\t\t\tRouter.go '/admin/Users'\n\n\tadminUpdateUser:\n\t\tonSubmit: (insertDoc, updateDoc, currentDoc)->\n\t\t\tMeteor.call 'adminUpdateUser', updateDoc, Session.get('admin_id'), @done\n\t\t\treturn false\n\t\tonSuccess: (formType, result)->\n\t\t\tAdminDashboard.alertSuccess 'Updated user'\n\t\t\tRouter.go '/admin/Users'\n\n\tadminSendResetPasswordEmail:\n\t\tonSuccess: (formType, result)->\n\t\t\tAdminDashboard.alertSuccess 'Email sent'\n\n\tadminChangePassword:\n\t\tonSuccess: (operation, result, template)->\n\t\t\tAdminDashboard.alertSuccess 'Password reset'\n","// Add hooks used by many forms\nAutoForm.addHooks(['admin_insert', 'admin_update', 'adminNewUser', 'adminUpdateUser', 'adminSendResetPasswordEmail', 'adminChangePassword'], {\n  beginSubmit: function() {\n    return $('.btn-primary').addClass('disabled');\n  },\n  endSubmit: function() {\n    return $('.btn-primary').removeClass('disabled');\n  },\n  onError: function(formType, error) {\n    return AdminDashboard.alertFailure(error.message);\n  }\n});\n\nAutoForm.hooks({\n  admin_insert: {\n    onSubmit: function(insertDoc, updateDoc, currentDoc) {\n      var hook;\n      hook = this;\n      Meteor.call('adminInsertDoc', insertDoc, Session.get('admin_collection_name'), function(e, r) {\n        if (e) {\n          return hook.done(e);\n        } else {\n          return adminCallback('onInsert', [Session.get('admin_collection_name', insertDoc, updateDoc, currentDoc)], function(collection) {\n            return hook.done(null, collection);\n          });\n        }\n      });\n      return false;\n    },\n    onSuccess: function(formType, collection) {\n      AdminDashboard.alertSuccess('Successfully created');\n      return Router.go(`/admin/${collection}`);\n    }\n  },\n  admin_update: {\n    onSubmit: function(insertDoc, updateDoc, currentDoc) {\n      var hook;\n      hook = this;\n      Meteor.call('adminUpdateDoc', updateDoc, Session.get('admin_collection_name'), Session.get('admin_id'), function(e, r) {\n        if (e) {\n          return hook.done(e);\n        } else {\n          return adminCallback('onUpdate', [Session.get('admin_collection_name', insertDoc, updateDoc, currentDoc)], function(collection) {\n            return hook.done(null, collection);\n          });\n        }\n      });\n      return false;\n    },\n    onSuccess: function(formType, collection) {\n      AdminDashboard.alertSuccess('Successfully updated');\n      return Router.go(`/admin/${collection}`);\n    }\n  },\n  adminNewUser: {\n    onSuccess: function(formType, result) {\n      AdminDashboard.alertSuccess('Created user');\n      return Router.go('/admin/Users');\n    }\n  },\n  adminUpdateUser: {\n    onSubmit: function(insertDoc, updateDoc, currentDoc) {\n      Meteor.call('adminUpdateUser', updateDoc, Session.get('admin_id'), this.done);\n      return false;\n    },\n    onSuccess: function(formType, result) {\n      AdminDashboard.alertSuccess('Updated user');\n      return Router.go('/admin/Users');\n    }\n  },\n  adminSendResetPasswordEmail: {\n    onSuccess: function(formType, result) {\n      return AdminDashboard.alertSuccess('Email sent');\n    }\n  },\n  adminChangePassword: {\n    onSuccess: function(operation, result, template) {\n      return AdminDashboard.alertSuccess('Password reset');\n    }\n  }\n});\n"]}}