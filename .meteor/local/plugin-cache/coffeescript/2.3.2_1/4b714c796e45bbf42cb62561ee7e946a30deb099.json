{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$4","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$5","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$6","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$7","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$9","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/wangziguan/wzg/EnergyMaster/packages/zimme:active-route/lib/activeroute.coffee","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/zimme:active-route/lib/activeroute.coffee","filename":"/home/wangziguan/wzg/EnergyMaster/packages/zimme:active-route/lib/activeroute.coffee","passPerPreset":false,"envName":"development","cwd":"/home/wangziguan/wzg/EnergyMaster","root":"/home/wangziguan/wzg/EnergyMaster","generatorOpts":{"filename":"/home/wangziguan/wzg/EnergyMaster/packages/zimme:active-route/lib/activeroute.coffee","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/zimme:active-route/lib/activeroute.coffee"}},"code":"var checkParams, checkRouteOrPath, checkRouterPackages, errorMessages, fr, ir, test;\nfr = ir = null;\n\ncheckRouteOrPath = function (arg) {\n  var error;\n\n  try {\n    return check(arg, Match.OneOf(RegExp, String));\n  } catch (error1) {\n    error = error1;\n    throw new Error(errorMessages.invalidRouteNameArgument);\n  }\n};\n\ncheckParams = function (arg) {\n  var error;\n\n  try {\n    return check(arg, Object);\n  } catch (error1) {\n    error = error1;\n    throw new Error(errorMessages.invalidRouteParamsArgument);\n  }\n};\n\ncheckRouterPackages = function () {\n  var ref, ref1;\n  fr = (ref = (ref1 = Package['kadira:flow-router']) != null ? ref1 : Package['meteorhacks:flow-router']) != null ? ref : Package['kadira:flow-router-ssr'];\n  ir = Package['iron:router'];\n\n  if (!(ir || fr)) {\n    throw new Error(errorMessages.noSupportedRouter);\n  }\n};\n\nerrorMessages = {\n  noSupportedRouter: 'No supported router installed. Please install ' + 'iron:router or meteorhacks:flow-router.',\n  invalidRouteNameArgument: 'Invalid argument, must be String or RegExp.',\n  invalidRouteParamsArgument: 'Invalid arguemnt, must be Object.'\n};\nshare.config = new ReactiveDict('activeRouteConfig');\nshare.config.setDefault({\n  activeClass: 'active',\n  caseSensitive: true,\n  disabledClass: 'disabled'\n});\n\ntest = function (value, pattern) {\n  var result;\n\n  if (!value) {\n    return false;\n  }\n\n  if (Match.test(pattern, RegExp)) {\n    result = value.search(pattern);\n    result = result > -1;\n  } else if (Match.test(pattern, String)) {\n    if (share.config.equals('caseSensitive', false)) {\n      value = value.toLowerCase();\n      pattern = pattern.toLowerCase();\n    }\n\n    result = value === pattern;\n  }\n\n  return result != null ? result : result = false;\n};\n\nActiveRoute = {\n  config: function () {\n    return this.configure.apply(this, arguments);\n  },\n  configure: function (options) {\n    if (Meteor.isServer) {\n      return;\n    }\n\n    share.config.set(options);\n  },\n  name: function (routeName) {\n    let routeParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var controller, currentPath, currentRouteName, path, ref, ref1;\n    checkRouterPackages();\n\n    if (Meteor.isServer && !Package['kadira:flow-router-ssr']) {\n      return;\n    }\n\n    checkRouteOrPath(routeName);\n    checkParams(routeParams);\n\n    if (ir) {\n      if (!_.isEmpty(routeParams) && Match.test(routeName, String)) {\n        controller = ir.Router.current();\n\n        if (controller != null ? controller.route : void 0) {\n          currentPath = controller != null ? controller.location.get().path : void 0;\n        }\n\n        path = ir.Router.path(routeName, routeParams);\n      } else {\n        currentRouteName = (ref = ir.Router.current()) != null ? (ref1 = ref.route) != null ? typeof ref1.getName === \"function\" ? ref1.getName() : void 0 : void 0 : void 0;\n      }\n    }\n\n    if (fr) {\n      if (!_.isEmpty(routeParams) && Match.test(routeName, String)) {\n        fr.FlowRouter.watchPathChange();\n\n        if (currentPath == null) {\n          currentPath = fr.FlowRouter.current().path;\n        }\n\n        if (path == null) {\n          path = fr.FlowRouter.path(routeName, routeParams);\n        }\n      } else {\n        if (currentRouteName == null) {\n          currentRouteName = fr.FlowRouter.getRouteName();\n        }\n      }\n    }\n\n    return test(currentPath || currentRouteName, path || routeName);\n  },\n  path: function (path) {\n    var controller, currentPath;\n    checkRouterPackages();\n\n    if (Meteor.isServer) {\n      return;\n    }\n\n    checkRouteOrPath(path);\n\n    if (ir) {\n      controller = ir.Router.current();\n\n      if (controller != null ? controller.route : void 0) {\n        currentPath = controller != null ? controller.location.get().path : void 0;\n      }\n    }\n\n    if (fr) {\n      fr.FlowRouter.watchPathChange();\n\n      if (currentPath == null) {\n        currentPath = fr.FlowRouter.current().path;\n      }\n    }\n\n    return test(currentPath, path);\n  }\n};","map":{"version":3,"sources":["packages/zimme:active-route/lib/activeroute.coffee"],"names":["checkParams","checkRouteOrPath","checkRouterPackages","errorMessages","fr","ir","test","arg","error","check","Match","OneOf","RegExp","String","error1","Error","invalidRouteNameArgument","Object","invalidRouteParamsArgument","ref","ref1","Package","noSupportedRouter","share","config","ReactiveDict","setDefault","activeClass","caseSensitive","disabledClass","value","pattern","result","search","equals","toLowerCase","ActiveRoute","configure","apply","arguments","options","Meteor","isServer","set","name","routeName","routeParams","controller","currentPath","currentRouteName","path","_","isEmpty","Router","current","route","location","get","getName","FlowRouter","watchPathChange","getRouteName"],"mappings":"AAAA,IAAIA,WAAJ,EAAiBC,gBAAjB,EAAmCC,mBAAnC,EAAwDC,aAAxD,EAAuEC,EAAvE,EAA2EC,EAA3E,EAA+EC,IAA/E;AAEAF,EAAE,GAAGC,EAAE,GAAG,IAAV;;AAEAJ,gBAAgB,GAAG,UAASM,GAAT,EAAc;AAC/B,MAAIC,KAAJ;;AACA,MAAI;AACF,WAAOC,KAAK,CAACF,GAAD,EAAMG,KAAK,CAACC,KAAN,CAAYC,MAAZ,EAAoBC,MAApB,CAAN,CAAZ;AACD,GAFD,CAEE,OAAOC,MAAP,EAAe;AACfN,IAAAA,KAAK,GAAGM,MAAR;AACA,UAAM,IAAIC,KAAJ,CAAUZ,aAAa,CAACa,wBAAxB,CAAN;AACD;AACF,CARD;;AAUAhB,WAAW,GAAG,UAASO,GAAT,EAAc;AAC1B,MAAIC,KAAJ;;AACA,MAAI;AACF,WAAOC,KAAK,CAACF,GAAD,EAAMU,MAAN,CAAZ;AACD,GAFD,CAEE,OAAOH,MAAP,EAAe;AACfN,IAAAA,KAAK,GAAGM,MAAR;AACA,UAAM,IAAIC,KAAJ,CAAUZ,aAAa,CAACe,0BAAxB,CAAN;AACD;AACF,CARD;;AAUAhB,mBAAmB,GAAG,YAAW;AAC/B,MAAIiB,GAAJ,EAASC,IAAT;AACAhB,EAAAA,EAAE,GAAG,CAACe,GAAG,GAAG,CAACC,IAAI,GAAGC,OAAO,CAAC,oBAAD,CAAf,KAA0C,IAA1C,GAAiDD,IAAjD,GAAwDC,OAAO,CAAC,yBAAD,CAAtE,KAAsG,IAAtG,GAA6GF,GAA7G,GAAmHE,OAAO,CAAC,wBAAD,CAA/H;AACAhB,EAAAA,EAAE,GAAGgB,OAAO,CAAC,aAAD,CAAZ;;AACA,MAAI,EAAEhB,EAAE,IAAID,EAAR,CAAJ,EAAiB;AACf,UAAM,IAAIW,KAAJ,CAAUZ,aAAa,CAACmB,iBAAxB,CAAN;AACD;AACF,CAPD;;AASAnB,aAAa,GAAG;AACdmB,EAAAA,iBAAiB,EAAE,mDAAmD,yCADxD;AAEdN,EAAAA,wBAAwB,EAAE,6CAFZ;AAGdE,EAAAA,0BAA0B,EAAE;AAHd,CAAhB;AAMAK,KAAK,CAACC,MAAN,GAAe,IAAIC,YAAJ,CAAiB,mBAAjB,CAAf;AAEAF,KAAK,CAACC,MAAN,CAAaE,UAAb,CAAwB;AACtBC,EAAAA,WAAW,EAAE,QADS;AAEtBC,EAAAA,aAAa,EAAE,IAFO;AAGtBC,EAAAA,aAAa,EAAE;AAHO,CAAxB;;AAMAvB,IAAI,GAAG,UAASwB,KAAT,EAAgBC,OAAhB,EAAyB;AAC9B,MAAIC,MAAJ;;AACA,MAAI,CAACF,KAAL,EAAY;AACV,WAAO,KAAP;AACD;;AACD,MAAIpB,KAAK,CAACJ,IAAN,CAAWyB,OAAX,EAAoBnB,MAApB,CAAJ,EAAiC;AAC/BoB,IAAAA,MAAM,GAAGF,KAAK,CAACG,MAAN,CAAaF,OAAb,CAAT;AACAC,IAAAA,MAAM,GAAGA,MAAM,GAAG,CAAC,CAAnB;AACD,GAHD,MAGO,IAAItB,KAAK,CAACJ,IAAN,CAAWyB,OAAX,EAAoBlB,MAApB,CAAJ,EAAiC;AACtC,QAAIU,KAAK,CAACC,MAAN,CAAaU,MAAb,CAAoB,eAApB,EAAqC,KAArC,CAAJ,EAAiD;AAC/CJ,MAAAA,KAAK,GAAGA,KAAK,CAACK,WAAN,EAAR;AACAJ,MAAAA,OAAO,GAAGA,OAAO,CAACI,WAAR,EAAV;AACD;;AACDH,IAAAA,MAAM,GAAGF,KAAK,KAAKC,OAAnB;AACD;;AACD,SAAOC,MAAM,IAAI,IAAV,GAAiBA,MAAjB,GAA0BA,MAAM,GAAG,KAA1C;AACD,CAhBD;;AAkBAI,WAAW,GAAG;AACZZ,EAAAA,MAAM,EAAE,YAAW;AACjB,WAAO,KAAKa,SAAL,CAAeC,KAAf,CAAqB,IAArB,EAA2BC,SAA3B,CAAP;AACD,GAHW;AAIZF,EAAAA,SAAS,EAAE,UAASG,OAAT,EAAkB;AAC3B,QAAIC,MAAM,CAACC,QAAX,EAAqB;AACnB;AACD;;AACDnB,IAAAA,KAAK,CAACC,MAAN,CAAamB,GAAb,CAAiBH,OAAjB;AACD,GATW;AAUZI,EAAAA,IAAI,EAAE,UAASC,SAAT,EAAsC;AAAA,QAAlBC,WAAkB,uEAAJ,EAAI;AAC1C,QAAIC,UAAJ,EAAgBC,WAAhB,EAA6BC,gBAA7B,EAA+CC,IAA/C,EAAqD/B,GAArD,EAA0DC,IAA1D;AACAlB,IAAAA,mBAAmB;;AACnB,QAAIuC,MAAM,CAACC,QAAP,IAAmB,CAACrB,OAAO,CAAC,wBAAD,CAA/B,EAA2D;AACzD;AACD;;AACDpB,IAAAA,gBAAgB,CAAC4C,SAAD,CAAhB;AACA7C,IAAAA,WAAW,CAAC8C,WAAD,CAAX;;AACA,QAAIzC,EAAJ,EAAQ;AACN,UAAI,CAAC8C,CAAC,CAACC,OAAF,CAAUN,WAAV,CAAD,IAA2BpC,KAAK,CAACJ,IAAN,CAAWuC,SAAX,EAAsBhC,MAAtB,CAA/B,EAA8D;AAC5DkC,QAAAA,UAAU,GAAG1C,EAAE,CAACgD,MAAH,CAAUC,OAAV,EAAb;;AACA,YAAIP,UAAU,IAAI,IAAd,GAAqBA,UAAU,CAACQ,KAAhC,GAAwC,KAAK,CAAjD,EAAoD;AAClDP,UAAAA,WAAW,GAAGD,UAAU,IAAI,IAAd,GAAqBA,UAAU,CAACS,QAAX,CAAoBC,GAApB,GAA0BP,IAA/C,GAAsD,KAAK,CAAzE;AACD;;AACDA,QAAAA,IAAI,GAAG7C,EAAE,CAACgD,MAAH,CAAUH,IAAV,CAAeL,SAAf,EAA0BC,WAA1B,CAAP;AACD,OAND,MAMO;AACLG,QAAAA,gBAAgB,GAAG,CAAC9B,GAAG,GAAGd,EAAE,CAACgD,MAAH,CAAUC,OAAV,EAAP,KAA+B,IAA/B,GAAsC,CAAClC,IAAI,GAAGD,GAAG,CAACoC,KAAZ,KAAsB,IAAtB,GAA6B,OAAOnC,IAAI,CAACsC,OAAZ,KAAwB,UAAxB,GAAqCtC,IAAI,CAACsC,OAAL,EAArC,GAAsD,KAAK,CAAxF,GAA4F,KAAK,CAAvI,GAA2I,KAAK,CAAnK;AACD;AACF;;AACD,QAAItD,EAAJ,EAAQ;AACN,UAAI,CAAC+C,CAAC,CAACC,OAAF,CAAUN,WAAV,CAAD,IAA2BpC,KAAK,CAACJ,IAAN,CAAWuC,SAAX,EAAsBhC,MAAtB,CAA/B,EAA8D;AAC5DT,QAAAA,EAAE,CAACuD,UAAH,CAAcC,eAAd;;AACA,YAAIZ,WAAW,IAAI,IAAnB,EAAyB;AACvBA,UAAAA,WAAW,GAAG5C,EAAE,CAACuD,UAAH,CAAcL,OAAd,GAAwBJ,IAAtC;AACD;;AACD,YAAIA,IAAI,IAAI,IAAZ,EAAkB;AAChBA,UAAAA,IAAI,GAAG9C,EAAE,CAACuD,UAAH,CAAcT,IAAd,CAAmBL,SAAnB,EAA8BC,WAA9B,CAAP;AACD;AACF,OARD,MAQO;AACL,YAAIG,gBAAgB,IAAI,IAAxB,EAA8B;AAC5BA,UAAAA,gBAAgB,GAAG7C,EAAE,CAACuD,UAAH,CAAcE,YAAd,EAAnB;AACD;AACF;AACF;;AACD,WAAOvD,IAAI,CAAC0C,WAAW,IAAIC,gBAAhB,EAAkCC,IAAI,IAAIL,SAA1C,CAAX;AACD,GA7CW;AA8CZK,EAAAA,IAAI,EAAE,UAASA,IAAT,EAAe;AACnB,QAAIH,UAAJ,EAAgBC,WAAhB;AACA9C,IAAAA,mBAAmB;;AACnB,QAAIuC,MAAM,CAACC,QAAX,EAAqB;AACnB;AACD;;AACDzC,IAAAA,gBAAgB,CAACiD,IAAD,CAAhB;;AACA,QAAI7C,EAAJ,EAAQ;AACN0C,MAAAA,UAAU,GAAG1C,EAAE,CAACgD,MAAH,CAAUC,OAAV,EAAb;;AACA,UAAIP,UAAU,IAAI,IAAd,GAAqBA,UAAU,CAACQ,KAAhC,GAAwC,KAAK,CAAjD,EAAoD;AAClDP,QAAAA,WAAW,GAAGD,UAAU,IAAI,IAAd,GAAqBA,UAAU,CAACS,QAAX,CAAoBC,GAApB,GAA0BP,IAA/C,GAAsD,KAAK,CAAzE;AACD;AACF;;AACD,QAAI9C,EAAJ,EAAQ;AACNA,MAAAA,EAAE,CAACuD,UAAH,CAAcC,eAAd;;AACA,UAAIZ,WAAW,IAAI,IAAnB,EAAyB;AACvBA,QAAAA,WAAW,GAAG5C,EAAE,CAACuD,UAAH,CAAcL,OAAd,GAAwBJ,IAAtC;AACD;AACF;;AACD,WAAO5C,IAAI,CAAC0C,WAAD,EAAcE,IAAd,CAAX;AACD;AAlEW,CAAd","sourcesContent":["var checkParams, checkRouteOrPath, checkRouterPackages, errorMessages, fr, ir, test;             \n\nfr = ir = null;\n\ncheckRouteOrPath = function(arg) {\n  var error;\n  try {\n    return check(arg, Match.OneOf(RegExp, String));\n  } catch (error1) {\n    error = error1;\n    throw new Error(errorMessages.invalidRouteNameArgument);\n  }\n};\n\ncheckParams = function(arg) {\n  var error;\n  try {\n    return check(arg, Object);\n  } catch (error1) {\n    error = error1;\n    throw new Error(errorMessages.invalidRouteParamsArgument);\n  }\n};\n\ncheckRouterPackages = function() {\n  var ref, ref1;\n  fr = (ref = (ref1 = Package['kadira:flow-router']) != null ? ref1 : Package['meteorhacks:flow-router']) != null ? ref : Package['kadira:flow-router-ssr'];\n  ir = Package['iron:router'];\n  if (!(ir || fr)) {\n    throw new Error(errorMessages.noSupportedRouter);\n  }\n};\n\nerrorMessages = {\n  noSupportedRouter: 'No supported router installed. Please install ' + 'iron:router or meteorhacks:flow-router.',\n  invalidRouteNameArgument: 'Invalid argument, must be String or RegExp.',\n  invalidRouteParamsArgument: 'Invalid arguemnt, must be Object.'\n};\n\nshare.config = new ReactiveDict('activeRouteConfig');\n\nshare.config.setDefault({\n  activeClass: 'active',\n  caseSensitive: true,\n  disabledClass: 'disabled'\n});\n\ntest = function(value, pattern) {\n  var result;\n  if (!value) {\n    return false;\n  }\n  if (Match.test(pattern, RegExp)) {\n    result = value.search(pattern);\n    result = result > -1;\n  } else if (Match.test(pattern, String)) {\n    if (share.config.equals('caseSensitive', false)) {\n      value = value.toLowerCase();\n      pattern = pattern.toLowerCase();\n    }\n    result = value === pattern;\n  }\n  return result != null ? result : result = false;\n};\n\nActiveRoute = {\n  config: function() {\n    return this.configure.apply(this, arguments);\n  },\n  configure: function(options) {\n    if (Meteor.isServer) {\n      return;\n    }\n    share.config.set(options);\n  },\n  name: function(routeName, routeParams = {}) {\n    var controller, currentPath, currentRouteName, path, ref, ref1;\n    checkRouterPackages();\n    if (Meteor.isServer && !Package['kadira:flow-router-ssr']) {\n      return;\n    }\n    checkRouteOrPath(routeName);\n    checkParams(routeParams);\n    if (ir) {\n      if (!_.isEmpty(routeParams) && Match.test(routeName, String)) {\n        controller = ir.Router.current();\n        if (controller != null ? controller.route : void 0) {\n          currentPath = controller != null ? controller.location.get().path : void 0;\n        }\n        path = ir.Router.path(routeName, routeParams);\n      } else {\n        currentRouteName = (ref = ir.Router.current()) != null ? (ref1 = ref.route) != null ? typeof ref1.getName === \"function\" ? ref1.getName() : void 0 : void 0 : void 0;\n      }\n    }\n    if (fr) {\n      if (!_.isEmpty(routeParams) && Match.test(routeName, String)) {\n        fr.FlowRouter.watchPathChange();\n        if (currentPath == null) {\n          currentPath = fr.FlowRouter.current().path;\n        }\n        if (path == null) {\n          path = fr.FlowRouter.path(routeName, routeParams);\n        }\n      } else {\n        if (currentRouteName == null) {\n          currentRouteName = fr.FlowRouter.getRouteName();\n        }\n      }\n    }\n    return test(currentPath || currentRouteName, path || routeName);\n  },\n  path: function(path) {\n    var controller, currentPath;\n    checkRouterPackages();\n    if (Meteor.isServer) {\n      return;\n    }\n    checkRouteOrPath(path);\n    if (ir) {\n      controller = ir.Router.current();\n      if (controller != null ? controller.route : void 0) {\n        currentPath = controller != null ? controller.location.get().path : void 0;\n      }\n    }\n    if (fr) {\n      fr.FlowRouter.watchPathChange();\n      if (currentPath == null) {\n        currentPath = fr.FlowRouter.current().path;\n      }\n    }\n    return test(currentPath, path);\n  }\n};\n"]},"sourceType":"script","hash":"4b714c796e45bbf42cb62561ee7e946a30deb099"}
