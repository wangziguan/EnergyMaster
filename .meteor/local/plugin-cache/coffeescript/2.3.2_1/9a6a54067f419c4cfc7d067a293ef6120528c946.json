{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$7","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$9","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/wangziguan/wzg/EnergyMaster/packages/wangziguan:admin/lib/both/startup.coffee","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"packages/wangziguan:admin/lib/both/startup.coffee","filename":"/home/wangziguan/wzg/EnergyMaster/packages/wangziguan:admin/lib/both/startup.coffee","passPerPreset":false,"envName":"development","cwd":"/home/wangziguan/wzg/EnergyMaster","root":"/home/wangziguan/wzg/EnergyMaster","presets":[],"generatorOpts":{"filename":"/home/wangziguan/wzg/EnergyMaster/packages/wangziguan:admin/lib/both/startup.coffee","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/wangziguan:admin/lib/both/startup.coffee"}},"code":"var adminCreateRouteEdit, adminCreateRouteEditOptions, adminCreateRouteNew, adminCreateRouteNewOptions, adminCreateRouteView, adminCreateRouteViewOptions, adminCreateRoutes, adminCreateTables, adminDelButton, adminEditButton, adminEditDelButtons, adminPublishTables, adminTablePubName, adminTablesDom, defaultColumns;\nthis.AdminTables = {};\nadminTablesDom = '<\"box\"<\"box-header\"<\"box-toolbar\"<\"pull-left\"<lf>><\"pull-right\"p>>><\"box-body\"t>><r>';\nadminEditButton = {\n  data: '_id',\n  title: 'Edit',\n  createdCell: function (node, cellData, rowData) {\n    return $(node).html(Blaze.toHTMLWithData(Template.adminEditBtn, {\n      _id: cellData\n    }));\n  },\n  width: '40px',\n  orderable: false\n};\nadminDelButton = {\n  data: '_id',\n  title: 'Delete',\n  createdCell: function (node, cellData, rowData) {\n    return $(node).html(Blaze.toHTMLWithData(Template.adminDeleteBtn, {\n      _id: cellData\n    }));\n  },\n  width: '40px',\n  orderable: false\n};\nadminEditDelButtons = [adminEditButton, adminDelButton];\n\ndefaultColumns = function () {\n  return [{\n    data: '_id',\n    title: 'ID'\n  }];\n};\n\nadminTablePubName = function (collection) {\n  return `admin_tabular_${collection}`;\n};\n\nadminCreateTables = function (collections) {\n  return _.each(typeof AdminConfig !== \"undefined\" && AdminConfig !== null ? AdminConfig.collections : void 0, function (collection, name) {\n    var columns;\n\n    _.defaults(collection, {\n      showEditColumn: true,\n      showDelColumn: true,\n      showInSideBar: true\n    });\n\n    columns = _.map(collection.tableColumns, function (column) {\n      var createdCell;\n\n      if (column.template) {\n        createdCell = function (node, cellData, rowData) {\n          $(node).html('');\n          return Blaze.renderWithData(Template[column.template], {\n            value: cellData,\n            doc: rowData\n          }, node);\n        };\n      }\n\n      return {\n        data: column.name,\n        title: column.label,\n        createdCell: createdCell\n      };\n    });\n\n    if (columns.length === 0) {\n      columns = defaultColumns();\n    }\n\n    if (collection.showEditColumn) {\n      columns.push(adminEditButton);\n    }\n\n    if (collection.showDelColumn) {\n      columns.push(adminDelButton);\n    }\n\n    return AdminTables[name] = new Tabular.Table({\n      name: name,\n      collection: adminCollectionObject(name),\n      pub: collection.children && adminTablePubName(name),\n      sub: collection.sub,\n      columns: columns,\n      extraFields: collection.extraFields,\n      dom: adminTablesDom,\n      selector: collection.selector || function () {\n        return {};\n      }\n    });\n  });\n};\n\nadminCreateRoutes = function (collections) {\n  _.each(collections, adminCreateRouteView);\n\n  _.each(collections, adminCreateRouteNew);\n\n  return _.each(collections, adminCreateRouteEdit);\n};\n\nadminCreateRouteView = function (collection, collectionName) {\n  return Router.route(`adminDashboard${collectionName}View`, adminCreateRouteViewOptions(collection, collectionName));\n};\n\nadminCreateRouteViewOptions = function (collection, collectionName) {\n  var options, ref;\n  options = {\n    path: `/admin/${collectionName}`,\n    template: \"AdminDashboardViewWrapper\",\n    controller: \"AdminController\",\n    data: function () {\n      return {\n        admin_table: AdminTables[collectionName]\n      };\n    },\n    action: function () {\n      return this.render();\n    },\n    onAfterAction: function () {\n      var ref, ref1;\n      Session.set('admin_title', collectionName);\n      Session.set('admin_subtitle', 'View');\n      Session.set('admin_collection_name', collectionName);\n      return (ref = collection.routes) != null ? (ref1 = ref.view) != null ? ref1.onAfterAction : void 0 : void 0;\n    }\n  };\n  return _.defaults(options, (ref = collection.routes) != null ? ref.view : void 0);\n};\n\nadminCreateRouteNew = function (collection, collectionName) {\n  return Router.route(`adminDashboard${collectionName}New`, adminCreateRouteNewOptions(collection, collectionName));\n};\n\nadminCreateRouteNewOptions = function (collection, collectionName) {\n  var options, ref;\n  options = {\n    path: `/admin/${collectionName}/new`,\n    template: \"AdminDashboardNew\",\n    controller: \"AdminController\",\n    action: function () {\n      return this.render();\n    },\n    onAfterAction: function () {\n      var ref, ref1;\n      Session.set('admin_title', AdminDashboard.collectionLabel(collectionName));\n      Session.set('admin_subtitle', 'Create new');\n      Session.set('admin_collection_page', 'new');\n      Session.set('admin_collection_name', collectionName);\n      return (ref = collection.routes) != null ? (ref1 = ref.new) != null ? ref1.onAfterAction : void 0 : void 0;\n    },\n    data: function () {\n      return {\n        admin_collection: adminCollectionObject(collectionName)\n      };\n    }\n  };\n  return _.defaults(options, (ref = collection.routes) != null ? ref.new : void 0);\n};\n\nadminCreateRouteEdit = function (collection, collectionName) {\n  return Router.route(`adminDashboard${collectionName}Edit`, adminCreateRouteEditOptions(collection, collectionName));\n};\n\nadminCreateRouteEditOptions = function (collection, collectionName) {\n  var options, ref;\n  options = {\n    path: `/admin/${collectionName}/:_id/edit`,\n    template: \"AdminDashboardEdit\",\n    controller: \"AdminController\",\n    waitOn: function () {\n      var ref, ref1;\n      Meteor.subscribe('adminCollectionDoc', collectionName, parseID(this.params._id));\n      return (ref = collection.routes) != null ? (ref1 = ref.edit) != null ? ref1.waitOn : void 0 : void 0;\n    },\n    action: function () {\n      return this.render();\n    },\n    onAfterAction: function () {\n      var ref, ref1;\n      Session.set('admin_title', AdminDashboard.collectionLabel(collectionName));\n      Session.set('admin_subtitle', 'Edit ' + this.params._id);\n      Session.set('admin_collection_page', 'edit');\n      Session.set('admin_collection_name', collectionName);\n      Session.set('admin_id', parseID(this.params._id));\n      Session.set('admin_doc', adminCollectionObject(collectionName).findOne({\n        _id: parseID(this.params._id)\n      }));\n      return (ref = collection.routes) != null ? (ref1 = ref.edit) != null ? ref1.onAfterAction : void 0 : void 0;\n    },\n    data: function () {\n      return {\n        admin_collection: adminCollectionObject(collectionName)\n      };\n    }\n  };\n  return _.defaults(options, (ref = collection.routes) != null ? ref.edit : void 0);\n};\n\nadminPublishTables = function (collections) {\n  return _.each(collections, function (collection, name) {\n    if (!collection.children) {\n      return void 0;\n    }\n\n    return Meteor.publishComposite(adminTablePubName(name), function (tableName, ids, fields) {\n      var extraFields;\n      check(tableName, String);\n      check(ids, Array);\n      check(fields, Match.Optional(Object));\n      extraFields = _.reduce(collection.extraFields, function (fields, name) {\n        fields[name] = 1;\n        return fields;\n      }, {});\n\n      _.extend(fields, extraFields);\n\n      this.unblock();\n      return {\n        find: function () {\n          this.unblock();\n          return adminCollectionObject(name).find({\n            _id: {\n              $in: ids\n            }\n          }, {\n            fields: fields\n          });\n        },\n        children: collection.children\n      };\n    });\n  });\n};\n\nMeteor.startup(function () {\n  adminCreateTables(typeof AdminConfig !== \"undefined\" && AdminConfig !== null ? AdminConfig.collections : void 0);\n  adminCreateRoutes(typeof AdminConfig !== \"undefined\" && AdminConfig !== null ? AdminConfig.collections : void 0);\n\n  if (Meteor.isServer) {\n    adminPublishTables(typeof AdminConfig !== \"undefined\" && AdminConfig !== null ? AdminConfig.collections : void 0);\n  }\n\n  if (AdminTables.Users) {\n    return void 0;\n  }\n\n  return AdminTables.Users = new Tabular.Table({\n    // Modify selector to allow search by email\n    changeSelector: function (selector, userId) {\n      var $or;\n      $or = selector['$or'];\n      $or && (selector['$or'] = _.map($or, function (exp) {\n        var ref;\n\n        if (((ref = exp.emails) != null ? ref['$regex'] : void 0) != null) {\n          return {\n            emails: {\n              $elemMatch: {\n                address: exp.emails\n              }\n            }\n          };\n        } else {\n          return exp;\n        }\n      }));\n      return selector;\n    },\n    name: 'Users',\n    collection: Meteor.users,\n    columns: _.union([{\n      data: '_id',\n      title: 'Admin',\n      // TODO: use `tmpl`\n      createdCell: function (node, cellData, rowData) {\n        return $(node).html(Blaze.toHTMLWithData(Template.adminUsersIsAdmin, {\n          _id: cellData\n        }));\n      },\n      width: '40px'\n    }, {\n      data: 'emails',\n      title: 'Email',\n      render: function (value) {\n        return value[0].address;\n      },\n      searchable: true\n    }, {\n      data: 'emails',\n      title: 'Mail',\n      // TODO: use `tmpl`\n      createdCell: function (node, cellData, rowData) {\n        return $(node).html(Blaze.toHTMLWithData(Template.adminUsersMailBtn, {\n          emails: cellData\n        }));\n      },\n      width: '40px'\n    }, {\n      data: 'createdAt',\n      title: 'Joined'\n    }], adminEditDelButtons),\n    dom: adminTablesDom\n  });\n});","map":{"version":3,"sources":["packages/wangziguan:admin/lib/both/startup.coffee"],"names":["adminCreateRouteEdit","adminCreateRouteEditOptions","adminCreateRouteNew","adminCreateRouteNewOptions","adminCreateRouteView","adminCreateRouteViewOptions","adminCreateRoutes","adminCreateTables","adminDelButton","adminEditButton","adminEditDelButtons","adminPublishTables","adminTablePubName","adminTablesDom","defaultColumns","AdminTables","data","title","createdCell","node","cellData","rowData","$","html","Blaze","toHTMLWithData","Template","adminEditBtn","_id","width","orderable","adminDeleteBtn","collection","collections","_","each","AdminConfig","name","columns","defaults","showEditColumn","showDelColumn","showInSideBar","map","tableColumns","column","template","renderWithData","value","doc","label","length","push","Tabular","Table","adminCollectionObject","pub","children","sub","extraFields","dom","selector","collectionName","Router","route","options","ref","path","controller","admin_table","action","render","onAfterAction","ref1","Session","set","routes","view","AdminDashboard","collectionLabel","new","admin_collection","waitOn","Meteor","subscribe","parseID","params","edit","findOne","publishComposite","tableName","ids","fields","check","String","Array","Match","Optional","Object","reduce","extend","unblock","find","$in","startup","isServer","Users","changeSelector","userId","$or","exp","emails","$elemMatch","address","users","union","adminUsersIsAdmin","searchable","adminUsersMailBtn"],"mappings":"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","sourcesContent":["var adminCreateRouteEdit, adminCreateRouteEditOptions, adminCreateRouteNew, adminCreateRouteNewOptions, adminCreateRouteView, adminCreateRouteViewOptions, adminCreateRoutes, adminCreateTables, adminDelButton, adminEditButton, adminEditDelButtons, adminPublishTables, adminTablePubName, adminTablesDom, defaultColumns;\n\nthis.AdminTables = {};\n\nadminTablesDom = '<\"box\"<\"box-header\"<\"box-toolbar\"<\"pull-left\"<lf>><\"pull-right\"p>>><\"box-body\"t>><r>';\n\nadminEditButton = {\n  data: '_id',\n  title: 'Edit',\n  createdCell: function(node, cellData, rowData) {\n    return $(node).html(Blaze.toHTMLWithData(Template.adminEditBtn, {\n      _id: cellData\n    }));\n  },\n  width: '40px',\n  orderable: false\n};\n\nadminDelButton = {\n  data: '_id',\n  title: 'Delete',\n  createdCell: function(node, cellData, rowData) {\n    return $(node).html(Blaze.toHTMLWithData(Template.adminDeleteBtn, {\n      _id: cellData\n    }));\n  },\n  width: '40px',\n  orderable: false\n};\n\nadminEditDelButtons = [adminEditButton, adminDelButton];\n\ndefaultColumns = function() {\n  return [\n    {\n      data: '_id',\n      title: 'ID'\n    }\n  ];\n};\n\nadminTablePubName = function(collection) {\n  return `admin_tabular_${collection}`;\n};\n\nadminCreateTables = function(collections) {\n  return _.each(typeof AdminConfig !== \"undefined\" && AdminConfig !== null ? AdminConfig.collections : void 0, function(collection, name) {\n    var columns;\n    _.defaults(collection, {\n      showEditColumn: true,\n      showDelColumn: true,\n      showInSideBar: true\n    });\n    columns = _.map(collection.tableColumns, function(column) {\n      var createdCell;\n      if (column.template) {\n        createdCell = function(node, cellData, rowData) {\n          $(node).html('');\n          return Blaze.renderWithData(Template[column.template], {\n            value: cellData,\n            doc: rowData\n          }, node);\n        };\n      }\n      return {\n        data: column.name,\n        title: column.label,\n        createdCell: createdCell\n      };\n    });\n    if (columns.length === 0) {\n      columns = defaultColumns();\n    }\n    if (collection.showEditColumn) {\n      columns.push(adminEditButton);\n    }\n    if (collection.showDelColumn) {\n      columns.push(adminDelButton);\n    }\n    return AdminTables[name] = new Tabular.Table({\n      name: name,\n      collection: adminCollectionObject(name),\n      pub: collection.children && adminTablePubName(name),\n      sub: collection.sub,\n      columns: columns,\n      extraFields: collection.extraFields,\n      dom: adminTablesDom,\n      selector: collection.selector || function() {\n        return {};\n      }\n    });\n  });\n};\n\nadminCreateRoutes = function(collections) {\n  _.each(collections, adminCreateRouteView);\n  _.each(collections, adminCreateRouteNew);\n  return _.each(collections, adminCreateRouteEdit);\n};\n\nadminCreateRouteView = function(collection, collectionName) {\n  return Router.route(`adminDashboard${collectionName}View`, adminCreateRouteViewOptions(collection, collectionName));\n};\n\nadminCreateRouteViewOptions = function(collection, collectionName) {\n  var options, ref;\n  options = {\n    path: `/admin/${collectionName}`,\n    template: \"AdminDashboardViewWrapper\",\n    controller: \"AdminController\",\n    data: function() {\n      return {\n        admin_table: AdminTables[collectionName]\n      };\n    },\n    action: function() {\n      return this.render();\n    },\n    onAfterAction: function() {\n      var ref, ref1;\n      Session.set('admin_title', collectionName);\n      Session.set('admin_subtitle', 'View');\n      Session.set('admin_collection_name', collectionName);\n      return (ref = collection.routes) != null ? (ref1 = ref.view) != null ? ref1.onAfterAction : void 0 : void 0;\n    }\n  };\n  return _.defaults(options, (ref = collection.routes) != null ? ref.view : void 0);\n};\n\nadminCreateRouteNew = function(collection, collectionName) {\n  return Router.route(`adminDashboard${collectionName}New`, adminCreateRouteNewOptions(collection, collectionName));\n};\n\nadminCreateRouteNewOptions = function(collection, collectionName) {\n  var options, ref;\n  options = {\n    path: `/admin/${collectionName}/new`,\n    template: \"AdminDashboardNew\",\n    controller: \"AdminController\",\n    action: function() {\n      return this.render();\n    },\n    onAfterAction: function() {\n      var ref, ref1;\n      Session.set('admin_title', AdminDashboard.collectionLabel(collectionName));\n      Session.set('admin_subtitle', 'Create new');\n      Session.set('admin_collection_page', 'new');\n      Session.set('admin_collection_name', collectionName);\n      return (ref = collection.routes) != null ? (ref1 = ref.new) != null ? ref1.onAfterAction : void 0 : void 0;\n    },\n    data: function() {\n      return {\n        admin_collection: adminCollectionObject(collectionName)\n      };\n    }\n  };\n  return _.defaults(options, (ref = collection.routes) != null ? ref.new : void 0);\n};\n\nadminCreateRouteEdit = function(collection, collectionName) {\n  return Router.route(`adminDashboard${collectionName}Edit`, adminCreateRouteEditOptions(collection, collectionName));\n};\n\nadminCreateRouteEditOptions = function(collection, collectionName) {\n  var options, ref;\n  options = {\n    path: `/admin/${collectionName}/:_id/edit`,\n    template: \"AdminDashboardEdit\",\n    controller: \"AdminController\",\n    waitOn: function() {\n      var ref, ref1;\n      Meteor.subscribe('adminCollectionDoc', collectionName, parseID(this.params._id));\n      return (ref = collection.routes) != null ? (ref1 = ref.edit) != null ? ref1.waitOn : void 0 : void 0;\n    },\n    action: function() {\n      return this.render();\n    },\n    onAfterAction: function() {\n      var ref, ref1;\n      Session.set('admin_title', AdminDashboard.collectionLabel(collectionName));\n      Session.set('admin_subtitle', 'Edit ' + this.params._id);\n      Session.set('admin_collection_page', 'edit');\n      Session.set('admin_collection_name', collectionName);\n      Session.set('admin_id', parseID(this.params._id));\n      Session.set('admin_doc', adminCollectionObject(collectionName).findOne({\n        _id: parseID(this.params._id)\n      }));\n      return (ref = collection.routes) != null ? (ref1 = ref.edit) != null ? ref1.onAfterAction : void 0 : void 0;\n    },\n    data: function() {\n      return {\n        admin_collection: adminCollectionObject(collectionName)\n      };\n    }\n  };\n  return _.defaults(options, (ref = collection.routes) != null ? ref.edit : void 0);\n};\n\nadminPublishTables = function(collections) {\n  return _.each(collections, function(collection, name) {\n    if (!collection.children) {\n      return void 0;\n    }\n    return Meteor.publishComposite(adminTablePubName(name), function(tableName, ids, fields) {\n      var extraFields;\n      check(tableName, String);\n      check(ids, Array);\n      check(fields, Match.Optional(Object));\n      extraFields = _.reduce(collection.extraFields, function(fields, name) {\n        fields[name] = 1;\n        return fields;\n      }, {});\n      _.extend(fields, extraFields);\n      this.unblock();\n      return {\n        find: function() {\n          this.unblock();\n          return adminCollectionObject(name).find({\n            _id: {\n              $in: ids\n            }\n          }, {\n            fields: fields\n          });\n        },\n        children: collection.children\n      };\n    });\n  });\n};\n\nMeteor.startup(function() {\n  adminCreateTables(typeof AdminConfig !== \"undefined\" && AdminConfig !== null ? AdminConfig.collections : void 0);\n  adminCreateRoutes(typeof AdminConfig !== \"undefined\" && AdminConfig !== null ? AdminConfig.collections : void 0);\n  if (Meteor.isServer) {\n    adminPublishTables(typeof AdminConfig !== \"undefined\" && AdminConfig !== null ? AdminConfig.collections : void 0);\n  }\n  if (AdminTables.Users) {\n    return void 0;\n  }\n  return AdminTables.Users = new Tabular.Table({\n    // Modify selector to allow search by email\n    changeSelector: function(selector, userId) {\n      var $or;\n      $or = selector['$or'];\n      $or && (selector['$or'] = _.map($or, function(exp) {\n        var ref;\n        if (((ref = exp.emails) != null ? ref['$regex'] : void 0) != null) {\n          return {\n            emails: {\n              $elemMatch: {\n                address: exp.emails\n              }\n            }\n          };\n        } else {\n          return exp;\n        }\n      }));\n      return selector;\n    },\n    name: 'Users',\n    collection: Meteor.users,\n    columns: _.union([\n      {\n        data: '_id',\n        title: 'Admin',\n        // TODO: use `tmpl`\n        createdCell: function(node,\n      cellData,\n      rowData) {\n          return $(node).html(Blaze.toHTMLWithData(Template.adminUsersIsAdmin,\n      {\n            _id: cellData\n          }));\n        },\n        width: '40px'\n      },\n      {\n        data: 'emails',\n        title: 'Email',\n        render: function(value) {\n          return value[0].address;\n        },\n        searchable: true\n      },\n      {\n        data: 'emails',\n        title: 'Mail',\n        // TODO: use `tmpl`\n        createdCell: function(node,\n      cellData,\n      rowData) {\n          return $(node).html(Blaze.toHTMLWithData(Template.adminUsersMailBtn,\n      {\n            emails: cellData\n          }));\n        },\n        width: '40px'\n      },\n      {\n        data: 'createdAt',\n        title: 'Joined'\n      }\n    ], adminEditDelButtons),\n    dom: adminTablesDom\n  });\n});\n"]},"sourceType":"script","hash":"9a6a54067f419c4cfc7d067a293ef6120528c946"}
