{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/wangziguan/wzg/EnergyMaster/packages/zimme:active-route/client/helpers.coffee","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/zimme:active-route/client/helpers.coffee","filename":"/home/wangziguan/wzg/EnergyMaster/packages/zimme:active-route/client/helpers.coffee","passPerPreset":false,"envName":"development","cwd":"/home/wangziguan/wzg/EnergyMaster","root":"/home/wangziguan/wzg/EnergyMaster","generatorOpts":{"filename":"/home/wangziguan/wzg/EnergyMaster/packages/zimme:active-route/client/helpers.coffee","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/zimme:active-route/client/helpers.coffee"}},"code":"var Spacebars,\n    Template,\n    func,\n    helpers,\n    isActive,\n    name,\n    hasProp = {}.hasOwnProperty;\n\nif (!(Package.templating && Package.spacebars)) {\n  return;\n}\n\nTemplate = Package.templating.Template;\nSpacebars = Package.spacebars.Spacebars;\n\nisActive = function (type) {\n  var inverse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var helperName;\n  helperName = 'is';\n\n  if (inverse) {\n    helperName += 'Not';\n  }\n\n  helperName += \"Active\" + type;\n  return function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var attributes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var className, isPath, name, path, pattern, ref, regex, result, t;\n\n    if (Match.test(options, Spacebars.kw)) {\n      options = options.hash;\n    }\n\n    if (Match.test(attributes, Spacebars.kw)) {\n      attributes = attributes.hash;\n    }\n\n    if (Match.test(options, String)) {\n      if (share.config.equals('regex', true)) {\n        options = {\n          regex: options\n        };\n      } else if (type === 'Path') {\n        options = {\n          path: options\n        };\n      } else {\n        options = {\n          name: options\n        };\n      }\n    }\n\n    options = _.defaults(attributes, options);\n    pattern = Match.ObjectIncluding({\n      \"class\": Match.Optional(String),\n      className: Match.Optional(String),\n      regex: Match.Optional(Match.OneOf(RegExp, String)),\n      name: Match.Optional(String),\n      path: Match.Optional(String)\n    });\n    check(options, pattern);\n    var _options = options;\n    regex = _options.regex;\n    name = _options.name;\n    path = _options.path;\n    className = (ref = options.class) != null ? ref : options.className;\n\n    if (type === 'Path') {\n      name = null;\n    } else {\n      path = null;\n    }\n\n    if (!(regex || name || path)) {\n      t = type === 'Route' ? 'name' : type;\n      t = t.toLowerCase();\n      console.error(\"Invalid argument, \" + helperName + \" takes \\\"\" + t + \"\\\", \" + (t + \"=\\\"\" + t + \"\\\" or regex=\\\"regex\\\"\"));\n      return false;\n    }\n\n    if (Match.test(regex, String)) {\n      if (share.config.equals('caseSensitive', false)) {\n        regex = new RegExp(regex, 'i');\n      } else {\n        regex = new RegExp(regex);\n      }\n    }\n\n    if (regex == null) {\n      regex = name || path;\n    }\n\n    if (inverse) {\n      if (className == null) {\n        className = share.config.get('disabledClass');\n      }\n    } else {\n      if (className == null) {\n        className = share.config.get('activeClass');\n      }\n    }\n\n    if (type === 'Path') {\n      isPath = true;\n    }\n\n    if (isPath) {\n      result = ActiveRoute.path(regex);\n    } else {\n      options = _.defaults(attributes, attributes.data);\n      result = ActiveRoute.name(regex, _.omit(options, ['class', 'className', 'data', 'regex', 'name', 'path']));\n    }\n\n    if (inverse) {\n      result = !result;\n    }\n\n    if (result) {\n      return className;\n    } else {\n      return false;\n    }\n  };\n};\n\nhelpers = {\n  isActiveRoute: isActive('Route'),\n  isActivePath: isActive('Path'),\n  isNotActiveRoute: isActive('Route', true),\n  isNotActivePath: isActive('Path', true)\n};\n\nfor (name in meteorBabelHelpers.sanitizeForInObject(helpers)) {\n  if (!hasProp.call(helpers, name)) continue;\n  func = helpers[name];\n  Template.registerHelper(name, func);\n}","map":{"version":3,"sources":["packages/zimme:active-route/client/helpers.coffee"],"names":["Spacebars","Template","func","helpers","isActive","name","hasProp","hasOwnProperty","Package","templating","spacebars","type","inverse","helperName","options","attributes","className","isPath","path","pattern","ref","regex","result","t","Match","test","kw","hash","String","share","config","equals","_","defaults","ObjectIncluding","Optional","OneOf","RegExp","check","class","toLowerCase","console","error","get","ActiveRoute","data","omit","isActiveRoute","isActivePath","isNotActiveRoute","isNotActivePath","call","registerHelper"],"mappings":"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","sourcesContent":["var Spacebars, Template, func, helpers, isActive, name,\n  hasProp = {}.hasOwnProperty;\n\nif (!(Package.templating && Package.spacebars)) {\n  return;\n}\n\nTemplate = Package.templating.Template;\n\nSpacebars = Package.spacebars.Spacebars;\n\nisActive = function(type, inverse = false) {\n  var helperName;\n  helperName = 'is';\n  if (inverse) {\n    helperName += 'Not';\n  }\n  helperName += `Active${type}`;\n  return function(options = {}, attributes = {}) {\n    var className, isPath, name, path, pattern, ref, regex, result, t;\n    if (Match.test(options, Spacebars.kw)) {\n      options = options.hash;\n    }\n    if (Match.test(attributes, Spacebars.kw)) {\n      attributes = attributes.hash;\n    }\n    if (Match.test(options, String)) {\n      if (share.config.equals('regex', true)) {\n        options = {\n          regex: options\n        };\n      } else if (type === 'Path') {\n        options = {\n          path: options\n        };\n      } else {\n        options = {\n          name: options\n        };\n      }\n    }\n    options = _.defaults(attributes, options);\n    pattern = Match.ObjectIncluding({\n      class: Match.Optional(String),\n      className: Match.Optional(String),\n      regex: Match.Optional(Match.OneOf(RegExp, String)),\n      name: Match.Optional(String),\n      path: Match.Optional(String)\n    });\n    check(options, pattern);\n    ({regex, name, path} = options);\n    className = (ref = options.class) != null ? ref : options.className;\n    if (type === 'Path') {\n      name = null;\n    } else {\n      path = null;\n    }\n    if (!(regex || name || path)) {\n      t = type === 'Route' ? 'name' : type;\n      t = t.toLowerCase();\n      console.error(`Invalid argument, ${helperName} takes \"${t}\", ` + `${t}=\"${t}\" or regex=\"regex\"`);\n      return false;\n    }\n    if (Match.test(regex, String)) {\n      if (share.config.equals('caseSensitive', false)) {\n        regex = new RegExp(regex, 'i');\n      } else {\n        regex = new RegExp(regex);\n      }\n    }\n    if (regex == null) {\n      regex = name || path;\n    }\n    if (inverse) {\n      if (className == null) {\n        className = share.config.get('disabledClass');\n      }\n    } else {\n      if (className == null) {\n        className = share.config.get('activeClass');\n      }\n    }\n    if (type === 'Path') {\n      isPath = true;\n    }\n    if (isPath) {\n      result = ActiveRoute.path(regex);\n    } else {\n      options = _.defaults(attributes, attributes.data);\n      result = ActiveRoute.name(regex, _.omit(options, ['class', 'className', 'data', 'regex', 'name', 'path']));\n    }\n    if (inverse) {\n      result = !result;\n    }\n    if (result) {\n      return className;\n    } else {\n      return false;\n    }\n  };\n};\n\nhelpers = {\n  isActiveRoute: isActive('Route'),\n  isActivePath: isActive('Path'),\n  isNotActiveRoute: isActive('Route', true),\n  isNotActivePath: isActive('Path', true)\n};\n\nfor (name in helpers) {\n  if (!hasProp.call(helpers, name)) continue;\n  func = helpers[name];\n  Template.registerHelper(name, func);\n}\n"]},"sourceType":"script","hash":"8f4a18746c3d50ae10c40dd8496f8760c5bc08ed"}
