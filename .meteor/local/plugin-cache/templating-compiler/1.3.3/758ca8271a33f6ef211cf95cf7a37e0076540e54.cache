{"head":"","body":"","js":"\nTemplate.__checkName(\"AdminDashboard\");\nTemplate[\"AdminDashboard\"] = new Template(\"Template.AdminDashboard\", (function() {\n  var view = this;\n  return Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"adminWidgets\"));\n  }, function() {\n    return [ \"\\n\\t\", Blaze._TemplateWith(function() {\n      return {\n        template: Spacebars.call(view.lookup(\"template\")),\n        data: Spacebars.call(view.lookup(\"data\"))\n      };\n    }, function() {\n      return Spacebars.include(function() {\n        return Spacebars.call(Template.__dynamic);\n      });\n    }), \"\\n\\t\" ];\n  }, function() {\n    return [ \"\\n\\t\", Spacebars.include(view.lookupTemplate(\"adminDefaultWidgets\")), \"\\n\\t\" ];\n  });\n}));\n\nTemplate.__checkName(\"AdminDashboardNew\");\nTemplate[\"AdminDashboardNew\"] = new Template(\"Template.AdminDashboardNew\", (function() {\n  var view = this;\n  return [ Spacebars.include(view.lookupTemplate(\"adminAlert\")), \"\\n\\t\", Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"adminTemplate\"), view.lookup(\"admin_collection_name\"), \"new\");\n  }, function() {\n    return [ \"\\n\\t\\t\", Spacebars.With(function() {\n      return Spacebars.dataMustache(view.lookup(\"adminTemplate\"), view.lookup(\"admin_collection_name\"), \"new\");\n    }, function() {\n      return [ \"\\n\\t\\t\", Blaze._TemplateWith(function() {\n        return {\n          template: Spacebars.call(view.lookup(\"name\")),\n          data: Spacebars.call(view.lookup(\"data\"))\n        };\n      }, function() {\n        return Spacebars.include(function() {\n          return Spacebars.call(Template.__dynamic);\n        });\n      }), \"\\n\\t\\t\" ];\n    }), \"\\n\\t\" ];\n  }, function() {\n    return [ \"\\n\\t\\t\", HTML.DIV({\n      class: \"box box-default\"\n    }, \"\\n\\t\\t\\t\", HTML.DIV({\n      class: \"box-body\"\n    }, \"\\n\\t\\t\\t\\t\", Blaze._TemplateWith(function() {\n      return {\n        id: Spacebars.call(\"admin_insert\"),\n        collection: Spacebars.call(view.lookup(\"admin_collection\")),\n        fields: Spacebars.call(view.lookup(\"admin_fields\")),\n        omitFields: Spacebars.call(view.lookup(\"admin_omit_fields\")),\n        buttonContent: Spacebars.call(\"Create\")\n      };\n    }, function() {\n      return Spacebars.include(view.lookupTemplate(\"quickForm\"));\n    }), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\"), \"\\n\\t\" ];\n  }) ];\n}));\n\nTemplate.__checkName(\"AdminDashboardEdit\");\nTemplate[\"AdminDashboardEdit\"] = new Template(\"Template.AdminDashboardEdit\", (function() {\n  var view = this;\n  return [ Spacebars.include(view.lookupTemplate(\"adminAlert\")), \"\\n\\t\", Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"adminTemplate\"), view.lookup(\"admin_collection_name\"), \"edit\");\n  }, function() {\n    return [ \"\\n\\t\\t\", Spacebars.With(function() {\n      return Spacebars.dataMustache(view.lookup(\"adminTemplate\"), view.lookup(\"admin_collection_name\"), \"edit\");\n    }, function() {\n      return [ \"\\n\\t\\t\", Blaze._TemplateWith(function() {\n        return {\n          template: Spacebars.call(view.lookup(\"name\")),\n          data: Spacebars.call(view.lookup(\"data\"))\n        };\n      }, function() {\n        return Spacebars.include(function() {\n          return Spacebars.call(Template.__dynamic);\n        });\n      }), \"\\n\\t\\t\" ];\n    }), \"\\n\\t\" ];\n  }, function() {\n    return [ \"\\n\\t\\t\", HTML.DIV({\n      class: \"box box-default\"\n    }, \"\\n\\t\\t\\t\", HTML.DIV({\n      class: \"box-body\"\n    }, \"\\n\\t\\t\\t\\t\", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"admin_current_doc\"));\n    }, function() {\n      return [ \"\\n\\t\\t\\t\\t\", Blaze._TemplateWith(function() {\n        return {\n          id: Spacebars.call(\"admin_update\"),\n          collection: Spacebars.call(view.lookup(\"admin_collection\")),\n          doc: Spacebars.call(view.lookup(\"admin_current_doc\")),\n          fields: Spacebars.call(view.lookup(\"admin_fields\")),\n          omitFields: Spacebars.call(view.lookup(\"admin_omit_fields\")),\n          buttonContent: Spacebars.call(\"Update\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"quickForm\"));\n      }), \"\\n\\t\\t\\t\\t\" ];\n    }), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\"), \"\\n\\t\" ];\n  }) ];\n}));\n\nTemplate.__checkName(\"AdminDashboardViewWrapper\");\nTemplate[\"AdminDashboardViewWrapper\"] = new Template(\"Template.AdminDashboardViewWrapper\", (function() {\n  var view = this;\n  return HTML.Raw(\"<div></div>\\n\\t\");\n}));\n\nTemplate.__checkName(\"AdminDashboardView\");\nTemplate[\"AdminDashboardView\"] = new Template(\"Template.AdminDashboardView\", (function() {\n  var view = this;\n  return [ Spacebars.include(view.lookupTemplate(\"adminAlert\")), \"\\n\\t\", Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"adminTemplate\"), view.lookup(\"admin_collection_name\"), \"view\");\n  }, function() {\n    return [ \"\\n\\t\\t\", Spacebars.With(function() {\n      return Spacebars.dataMustache(view.lookup(\"adminTemplate\"), view.lookup(\"admin_collection_name\"), \"view\");\n    }, function() {\n      return [ \"\\n\\t\\t\", Blaze._TemplateWith(function() {\n        return {\n          template: Spacebars.call(view.lookup(\"name\")),\n          data: Spacebars.call(view.lookup(\"data\"))\n        };\n      }, function() {\n        return Spacebars.include(function() {\n          return Spacebars.call(Template.__dynamic);\n        });\n      }), \"\\n\\t\\t\" ];\n    }), \"\\n\\t\" ];\n  }, function() {\n    return [ \"\\n\\t\\t\", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"hasDocuments\"));\n    }, function() {\n      return [ \"\\n\\t\\t\\t\", Blaze._TemplateWith(function() {\n        return {\n          table: Spacebars.call(view.lookup(\"admin_table\")),\n          class: Spacebars.call(\"table dataTable\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"tabular\"));\n      }), \"\\n\\t\\t\" ];\n    }, function() {\n      return [ \"\\n\\t\\t\\t\", HTML.DIV({\n        class: \"alert alert-info\"\n      }, \"\\n\\t\\t\\t\\t\", HTML.P(\"There are no visible items in this collection.\"), \"\\n\\t\\t\\t\\t\", HTML.P(HTML.A({\n        href: function() {\n          return Spacebars.mustache(view.lookup(\"newPath\"));\n        },\n        class: \"btn btn-primary\"\n      }, HTML.I({\n        class: \"fa fa-plus\"\n      }), \" Add one\")), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\" ];\n    }), \"\\n\\t\" ];\n  }) ];\n}));\n\nTemplate.__checkName(\"AdminDashboardUsersNew\");\nTemplate[\"AdminDashboardUsersNew\"] = new Template(\"Template.AdminDashboardUsersNew\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"box box-default\"\n  }, \"\\n\\t\\t\", HTML.DIV({\n    class: \"box-body\"\n  }, \"\\n\\t\\t\\t\", Spacebars.include(view.lookupTemplate(\"adminAlert\")), \"\\n\\t\\t\\t\", Blaze._TemplateWith(function() {\n    return {\n      id: Spacebars.call(\"adminNewUser\"),\n      schema: Spacebars.call(Spacebars.dot(view.lookup(\"AdminSchemas\"), \"newUser\")),\n      type: Spacebars.call(\"method\"),\n      meteormethod: Spacebars.call(\"adminNewUser\")\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"autoForm\"), function() {\n      return [ \"\\n\\n\\t\\t\\t\", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"email\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n\\t\\t\\t\", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"password\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n\\t\\t\\t\", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"sendPassword\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n\\n\\t\\t\\t\", HTML.BUTTON({\n        type: \"submit\",\n        class: \"btn btn-primary\"\n      }, \"Add User\"), \"\\n\\n\\t\\t\\t\" ];\n    });\n  }), \"\\n\\t\\t\"), \"\\n\\t\");\n}));\n\nTemplate.__checkName(\"AdminDashboardUsersEdit\");\nTemplate[\"AdminDashboardUsersEdit\"] = new Template(\"Template.AdminDashboardUsersEdit\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"box box-default\"\n  }, \"\\n\\t\\t\", HTML.DIV({\n    class: \"box-body\"\n  }, \"\\n\\t\\t\\t\", Spacebars.include(view.lookupTemplate(\"adminAlert\")), \"\\n\\t\\t\\t\", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"adminGetUserSchema\"));\n  }, function() {\n    return [ \"\\n\\t\\t\\t\", Blaze._TemplateWith(function() {\n      return {\n        id: Spacebars.call(\"adminUpdateUser\"),\n        buttonContent: Spacebars.call(\"Update\"),\n        buttonClasses: Spacebars.call(\"btn btn-primary btn-sm\"),\n        collection: Spacebars.call(view.lookup(\"adminGetUsers\")),\n        schema: Spacebars.call(view.lookup(\"adminGetUserSchema\")),\n        doc: Spacebars.call(view.lookup(\"admin_current_doc\")),\n        omitFields: Spacebars.call(\"roles,services\")\n      };\n    }, function() {\n      return Spacebars.include(view.lookupTemplate(\"quickForm\"));\n    }), \"\\n\\t\\t\\t\", HTML.HR(), \"\\n\\t\\t\\t\" ];\n  }), \"\\n\\n\\t\\t\\t\", HTML.Raw(\"<h4>User Roles</h4>\"), \"\\n\\t\\t\\t\", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"roles\"));\n  }, function() {\n    return [ \"\\n\\t\\t\\t\", HTML.BUTTON({\n      class: \"btn btn-primary btn-xs btn-remove-role\",\n      role: function() {\n        return Spacebars.mustache(view.lookup(\".\"));\n      },\n      user: function() {\n        return Spacebars.mustache(view.lookup(\"admin_current_id\"));\n      }\n    }, Blaze.View(\"lookup:.\", function() {\n      return Spacebars.mustache(view.lookup(\".\"));\n    })), \"\\n\\t\\t\\t\" ];\n  }), \"\\n\\t\\t\\t\", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"otherRoles\"));\n  }, function() {\n    return [ \"\\n\\t\\t\\t\", HTML.BUTTON({\n      class: \"btn btn-default btn-xs btn-add-role\",\n      role: function() {\n        return Spacebars.mustache(view.lookup(\".\"));\n      },\n      user: function() {\n        return Spacebars.mustache(view.lookup(\"admin_current_id\"));\n      }\n    }, Blaze.View(\"lookup:.\", function() {\n      return Spacebars.mustache(view.lookup(\".\"));\n    })), \"\\n\\t\\t\\t\" ];\n  }), \"\\n\\t\\t\\t\", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"roles\"));\n  }, function() {\n    return [ \"\\n\\t\\t\\t\", HTML.P({\n      style: \"margin-top:5px;\"\n    }, \"Click a role to toggle it.\"), \"\\n\\t\\t\\t\" ];\n  }, function() {\n    return [ \"\\n\\t\\t\\t\", HTML.P(\"User not in any roles. Click a role to add it to a user.\"), \"\\n\\t\\t\\t\" ];\n  }), \"\\n\\n\\t\\t\\t\", HTML.Raw(\"<hr>\"), \"\\n\\t\\t\\t\", HTML.Raw(\"<h4>Reset Password</h4>\"), \"\\n\\t\\t\\t\", Blaze._TemplateWith(function() {\n    return {\n      id: Spacebars.call(\"adminSendResetPasswordEmail\"),\n      schema: Spacebars.call(Spacebars.dot(view.lookup(\"AdminSchemas\"), \"sendResetPasswordEmail\")),\n      type: Spacebars.call(\"method\"),\n      meteormethod: Spacebars.call(\"adminSendResetPasswordEmail\")\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"autoForm\"), function() {\n      return [ \"\\n\\t\\t\\t\", HTML.DIV({\n        class: \"form-group hidden\"\n      }, \"\\n\\t\\t\\t\\t\", HTML.LABEL({\n        class: \"control-label\",\n        for: \"title\"\n      }, \"ID\"), \"\\n\\t\\t\\t\\t\", HTML.INPUT({\n        value: function() {\n          return Spacebars.mustache(view.lookup(\"admin_current_id\"));\n        },\n        type: \"text\",\n        name: \"_id\",\n        omitfields: \"createdAtupdatedAt\",\n        required: \"\",\n        \"data-schema-key\": \"_id\",\n        class: \"form-control\",\n        autocomplete: \"off\"\n      }), \"\\n\\t\\t\\t\\t\", HTML.SPAN({\n        class: \"help-block\"\n      }), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\\t\", HTML.P(\"Send a reset password email to \", Blaze.View(\"lookup:admin_current_doc.emails.0.address\", function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"admin_current_doc\"), \"emails\", \"0\", \"address\"));\n      })), \"\\n\\t\\t\\t\", HTML.BUTTON({\n        type: \"submit\",\n        class: \"btn btn-primary btn-sm\"\n      }, \"Send Email\"), \"\\n\\t\\t\\t\" ];\n    });\n  }), \"\\n\\n\\t\\t\\t\", HTML.Raw(\"<hr>\"), \"\\n\\t\\t\\t\", HTML.Raw(\"<h4>Change Password</h4>\"), \"\\n\\t\\t\\t\", Blaze._TemplateWith(function() {\n    return {\n      id: Spacebars.call(\"adminChangePassword\"),\n      schema: Spacebars.call(Spacebars.dot(view.lookup(\"AdminSchemas\"), \"changePassword\")),\n      type: Spacebars.call(\"method\"),\n      meteormethod: Spacebars.call(\"adminChangePassword\")\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"autoForm\"), function() {\n      return [ \"\\n\\t\\t\\t\", HTML.DIV({\n        class: \"form-group hidden\"\n      }, \"\\n\\t\\t\\t\\t\", HTML.LABEL({\n        class: \"control-label\",\n        for: \"title\"\n      }, \"ID\"), \"\\n\\t\\t\\t\\t\", HTML.INPUT({\n        value: function() {\n          return Spacebars.mustache(view.lookup(\"admin_current_id\"));\n        },\n        type: \"text\",\n        name: \"_id\",\n        omitfields: \"createdAtupdatedAt\",\n        required: \"\",\n        \"data-schema-key\": \"_id\",\n        class: \"form-control\",\n        autocomplete: \"off\"\n      }), \"\\n\\t\\t\\t\\t\", HTML.SPAN({\n        class: \"help-block\"\n      }), \"\\n\\t\\t\\t\"), \"\\n\\t\\t\\t\", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"password\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n\\t\\t\\t\", HTML.BUTTON({\n        type: \"submit\",\n        class: \"btn btn-primary btn-sm\"\n      }, \"Change Password\"), \"\\n\\t\\t\\t\" ];\n    });\n  }), \"\\n\\t\\t\"), \"\\n\\t\");\n}));\n\nTemplate.__checkName(\"adminAlert\");\nTemplate[\"adminAlert\"] = new Template(\"Template.adminAlert\", (function() {\n  var view = this;\n  return [ Blaze.If(function() {\n    return Spacebars.dataMustache(Spacebars.dot(view.lookup(\"$\"), \"Session\", \"get\"), \"adminSuccess\");\n  }, function() {\n    return [ \"\\n\\t\", HTML.DIV({\n      class: \"alert alert-success admin-alert\"\n    }, \"\\n\\t\\t\", Blaze.View(\"lookup:$.Session.get\", function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"$\"), \"Session\", \"get\"), \"adminSuccess\");\n    }), \"\\n\\t\"), \"\\n\\t\" ];\n  }), \"\\n\\n\\t\", Blaze.If(function() {\n    return Spacebars.dataMustache(Spacebars.dot(view.lookup(\"$\"), \"Session\", \"get\"), \"adminError\");\n  }, function() {\n    return [ \"\\n\\t\", HTML.DIV({\n      class: \"alert alert-danger admin-alert\"\n    }, \"\\n\\t\\t\", Blaze.View(\"lookup:$.Session.get\", function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"$\"), \"Session\", \"get\"), \"adminError\");\n    }), \"\\n\\t\"), \"\\n\\t\" ];\n  }) ];\n}));\n\nTemplate.__checkName(\"adminUsersIsAdmin\");\nTemplate[\"adminUsersIsAdmin\"] = new Template(\"Template.adminUsersIsAdmin\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"adminIsUserInRole\"), Spacebars.dot(view.lookup(\".\"), \"_id\"), \"admin\");\n  }, function() {\n    return HTML.I({\n      class: \"fa fa-check\"\n    });\n  });\n}));\n\nTemplate.__checkName(\"adminUsersMailBtn\");\nTemplate[\"adminUsersMailBtn\"] = new Template(\"Template.adminUsersMailBtn\", (function() {\n  var view = this;\n  return HTML.A({\n    href: function() {\n      return [ \"mailto:\", Spacebars.mustache(view.lookup(\"adminUserEmail\"), view.lookup(\".\")) ];\n    },\n    class: \"btn btn-default btn-xs\"\n  }, HTML.Raw('<i class=\"fa fa-envelope\"></i>'));\n}));\n\nTemplate.__checkName(\"adminEditBtn\");\nTemplate[\"adminEditBtn\"] = new Template(\"Template.adminEditBtn\", (function() {\n  var view = this;\n  return [ HTML.A({\n    href: function() {\n      return Spacebars.mustache(view.lookup(\"path\"));\n    },\n    class: \"hidden-xs btn btn-xs btn-primary\"\n  }, HTML.Raw('<i class=\"fa fa-pencil\"></i>')), \"\\n\\t\", HTML.A({\n    href: function() {\n      return Spacebars.mustache(view.lookup(\"path\"));\n    },\n    class: \"visible-xs btn btn-sm btn-primary\"\n  }, HTML.Raw('<i class=\"fa fa-pencil\"></i>'), \" Edit\") ];\n}));\n\nTemplate.__checkName(\"adminDeleteBtn\");\nTemplate[\"adminDeleteBtn\"] = new Template(\"Template.adminDeleteBtn\", (function() {\n  var view = this;\n  return [ HTML.A({\n    \"data-toggle\": \"modal\",\n    doc: function() {\n      return Spacebars.mustache(view.lookup(\"_id\"));\n    },\n    href: \"#admin-delete-modal\",\n    class: \"hidden-xs btn btn-xs btn-danger btn-delete\"\n  }, HTML.I({\n    class: \"fa fa-times\",\n    doc: function() {\n      return Spacebars.mustache(view.lookup(\"_id\"));\n    }\n  })), \"\\n\\t\", HTML.A({\n    \"data-toggle\": \"modal\",\n    doc: function() {\n      return Spacebars.mustache(view.lookup(\"_id\"));\n    },\n    href: \"#admin-delete-modal\",\n    class: \"visible-xs btn btn-sm btn-danger btn-delete\"\n  }, HTML.I({\n    class: \"fa fa-times\",\n    doc: function() {\n      return Spacebars.mustache(view.lookup(\"_id\"));\n    }\n  }), \" Delete\") ];\n}));\n","bodyAttrs":{}}