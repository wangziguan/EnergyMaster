[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Blaze = Package.blaze.Blaze;\nvar UI = Package.blaze.UI;\nvar Handlebars = Package.blaze.Handlebars;\nvar Session = Package.session.Session;\nvar Tracker = Package.tracker.Tracker;\nvar Deps = Package.tracker.Deps;\nvar _ = Package.underscore._;\nvar HTML = Package.htmljs.HTML;\n\n/* Package-scope variables */\nvar Helpers;\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/raix_handlebar-helpers/common.js                                                                         //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n// Helper scope\nif (typeof Helpers === 'undefined') {\n  Helpers = {};\n}\n\nvar languageText = {};\n\n// expects an array: languageText['say.hello.to.me']['en'] = 'Say hello to me:)';\n// ex.:\n// getText('Say.Hello.To.Me') == 'say hello to me:)'; // lowercase\n// getText('SAY.HELLO.TO.ME') == 'SAY HELLO TO ME:)'; // uppercase\n// getText('Say.hello.to.me') == 'Say hello to me:)'; // uppercase first letter, rest lowercase\n// getText('Say.Hello.To.Me') == 'Say Hello To Me:)'; // camelCase\n// getText('SAy.hello.to.me') == 'Say hello To me:)'; // ignore case sensitivity\n\nvar _languageDeps = (Meteor.isClient) ? new Deps.Dependency() : null;\nvar currentLanguage = 'en';\n\n// language = 'en'\nHelpers.setLanguage = function (language) {\n  if (language && language !== currentLanguage) {\n    currentLanguage = language;\n    if (Meteor.isClient) _languageDeps.changed();\n  }\n};\n\nHelpers.language = function () {\n  if (Meteor.isClient) _languageDeps.depend();\n  return currentLanguage;\n};\n\nHelpers.setDictionary = function(dict) {\n  languageText = dict;\n};\n\nHelpers.addDictionary = function(dict) {\n  _.extend(languageText, dict);\n};\n\n// handleCase will mimic text Case making src same case as text\nvar handleCase = function (text, src) {\n  // Return lowercase\n  if (text == text.toLowerCase())\n    return src.toLowerCase();\n  // Return uppercase\n  if (text == text.toUpperCase())\n    return src.toUpperCase();\n  // Return uppercase first letter, rest lowercase\n  if (text.substr(1) == text.substr(1).toLowerCase())\n    return src.substr(0, 1).toUpperCase() + src.substr(1).toLowerCase();\n  // Return src withour changes\n  if (text.substr(0, 2) == text.substr(0, 2).toUpperCase())\n    return src;\n  // Return CamelCase\n  return src.replace(/( [a-z])/g, function ($1) {\n    return $1.toUpperCase();\n  });\n};\n\n/**\n *\n * @param {string} text\n * @param {string} [lang]\n * @return {string}\n */\nHelpers.getText = function (text, lang) {\n  var txt = text.toLowerCase();\n  var langText = languageText && languageText[txt];\n  var langKey = (typeof lang === 'string') ? lang : Helpers.language();\n  return handleCase(text, (langText) ? ( (langText[langKey]) ? langText[langKey] : langText.en) : '[' + text + ']');\n};\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/raix_handlebar-helpers/helpers.operators.js                                                              //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n// Forward compability\nif (typeof UI === 'undefined' || typeof UI.registerHelper !== 'function') {\n  UI = {\n    registerHelper: function(name, f) {\n      if (typeof Handlebars !== 'undefined') {\n        return Handlebars.registerHelper(name, f);\n      } else {\n        throw new Error('No UI or Handlebars found');\n      }\n    }\n  };\n}\n\nif (typeof UI !== 'undefined') {\n    UI.registerHelper('getLength', function (a) {\n      return a && a.length;\n    });\n\n    UI.registerHelper('isSelected', function (a, b) {\n      return (a === b) ? { selected: 'selected' } : null;\n    });\n\n    UI.registerHelper('isChecked', function (a, b) {\n      return (a === b) ? { checked: 'checked' } : null;\n    });\n\n    UI.registerHelper('cutString', function (str, len) {\n      return (str.length > len)?str.substr(0, Math.max(len-3, 0))+'...':str;\n    });\n\n    UI.registerHelper('$eq', function (a, b) {\n      return (a === b); //Only text, numbers, boolean - not array & objects\n    });\n\n    UI.registerHelper('$neq', function (a, b) {\n      return (a !== b); //Only text, numbers, boolean - not array & objects\n    });\n\n    UI.registerHelper('$in', function (a, b, c, d) {\n      return ( a === b || a === c || a === d);\n    });\n\n    UI.registerHelper('$nin', function (a, b, c, d) {\n      return ( a !== b && a !== c && a !== d);\n    });\n\n    UI.registerHelper('$exists', function (a) {\n      return ( a !== undefined);\n    });\n\n    UI.registerHelper('$lt', function (a, b) {\n      return (a < b);\n    });\n\n    UI.registerHelper('$gt', function (a, b) {\n      return (a > b);\n    });\n\n    UI.registerHelper('$lte', function (a, b) {\n      return (a <= b);\n    });\n\n    UI.registerHelper('$gte', function (a, b) {\n      return (a >= b);\n    });\n\n\n    UI.registerHelper('$and', function (a, b) {\n      return (a && b);\n    });\n\n    UI.registerHelper('$or', function (a, b) {\n      return (a || b);\n    });\n\n    UI.registerHelper('$not', function (a) {\n      return (!a);\n    });\n\n    UI.registerHelper('nl2br', function (text) {\n        var nl2br = (text + '').replace(/([^>\\r\\n]?)(\\r\\n|\\n\\r|\\r|\\n)/g, '$1' + '<br>' + '$2');\n        return new Spacebars.SafeString(nl2br);\n    });\n\n    UI.registerHelper('getText', function (text, lang) { // Deprecating\n      var langKey = lang || null;\n      return Helpers.getText(text, langKey);\n    });\n    \n  UI.registerHelper(\"$mapped\", function(arr) {\n    if(!Array.isArray(arr)){\n      try {\n        arr = arr.fetch()\n      }\n      catch (e){\n        console.log(\"Error in $mapped: perhaps you aren't sending in a collection or array.\")\n        return [];\n      }\n    }\n    \n    var $length = arr.length;\n    \n    var mappedArray = arr.map(function(item,index) {\n      item.$length = $length;\n      item.$index = index;\n      item.$first = index === 0;\n      item.$last  = index === $length-1;\n      return item;\n    });\n    \n    return mappedArray || [];\n  });\n  \n    // UI.registerHelper('userRole', function ( /* arguments */) {\n    //   var role = Session.get('currentRole');\n    //   return _.any(arguments, function(value) { return (value == role); });\n    // });\n\n    /*\n        Then $uper helper - Credit goes to @belisarius222 aka Ted Blackman for sparking an idear for a solution\n    */\n    Helpers.superScope = {};\n\n    Helpers.addScope = function(name, obj) {\n      // TODO: Get rid of underscore\n      Helpers.superScope[name] = _.bind(function() { return this; }, obj);\n    };\n\n    Helpers.removeScope = function(name) {\n      delete UI._globalHelpers[name];\n      delete Helpers.superScope[name];\n    };\n    \n    Helpers.addScope('Session', Session);\n    Helpers.addScope('Meteor', Meteor);\n\n    UI.registerHelper('$', function() {\n      return Helpers.superScope;\n    });\n}\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nPackage._define(\"raix:handlebar-helpers\", {\n  Helpers: Helpers\n});\n\n})();\n","servePath":"/packages/raix_handlebar-helpers.js"}]